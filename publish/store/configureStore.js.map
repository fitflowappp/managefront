{"version":3,"sources":["../../src/store/configureStore.js"],"names":["configureStore","createStoreWithMiddleware","initialState","store","module","hot","accept","nextReducer","require","replaceReducer"],"mappings":";;;;;kBAawBA,c;;AAVxB;;AACA;;;;AACA;;;;;;AAEA;AACA;AACA,IAAMC,4BAA4B,qEAAlC,C,CATA;;;AAae,SAASD,cAAT,CAAwBE,YAAxB,EAAsC;AACjD,QAAMC,QAAQF,8CAAmCC;;AAEjD;AAFc,KAAd,CAGA,IAAIE,OAAOC,GAAX,EAAgB;AACZ;AACAD,eAAOC,GAAP,CAAWC,MAAX,CAAkB,aAAlB,EAAiC,YAAM;AACnC,gBAAMC,cAAcC,QAAQ,aAAR,CAApB;AACAL,kBAAMM,cAAN,CAAqBF,WAArB;AACH,SAHD;AAIH;;AAED,WAAOJ,KAAP;AACH","file":"configureStore.js","sourcesContent":["/**\r\n * Created by john on 2016/5/16.\r\n */\r\nimport { createStore, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport reducer from '../reducers'\r\n\r\n//applyMiddleware来自redux可以包装 store 的 dispatch\r\n//thunk作用是使被 dispatch 的 function 会接收 dispatch 作为参数，并且可以异步调用它\r\nconst createStoreWithMiddleware = applyMiddleware(\r\n    thunk\r\n)(createStore);\r\n\r\nexport default function configureStore(initialState) {\r\n    const store = createStoreWithMiddleware(reducer, initialState)\r\n\r\n    //热替换选项\r\n    if (module.hot) {\r\n        // Enable Webpack hot module replacement for reducers\r\n        module.hot.accept('../reducers', () => {\r\n            const nextReducer = require('../reducers')\r\n            store.replaceReducer(nextReducer)\r\n        })\r\n    }\r\n\r\n    return store\r\n}\r\n"]}