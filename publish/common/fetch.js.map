{"version":3,"sources":["../../src/common/fetch.js"],"names":["fetch","apiFactory","upload","postAPI","getAPI","putAPI","deleteAPI","headers","auth_token","conf","baseURL","timeout","console","log","process","env","BROWSER","create","handleError","dispatch","error","status","fetchSetAfterMethod","promise","after","success","then","response","data","method","successCB","errorCB","actions","_url","_params","keys","params","url","match1","match","i","key","replace","match2","map","request_action","receive_action","error_action","get","_","Date","getTime","catch","err","e","progressCb","FormData","file","target","files","length","append","config","progress","progressEvent","percentCompleted","loaded","total","post"],"mappings":"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","file":"fetch.js","sourcesContent":["/**\n * Created by john on 2016/5/19.\n */\nimport axios from 'axios';\nimport {port} from \"../config\"\nimport {getMToken, logout} from \"../common/auth\";\n\nexport function fetch() {\n    var headers = {\n        'Content-Type': 'application/json'\n    };\n    var auth_token = getMToken();\n    if (auth_token) {\n        headers['Authorization'] = auth_token;\n    }\n    var conf = {\n        baseURL: \"http://localhost:\" + port + \"/\",\n        timeout: 60000,\n        headers\n    };\n    console.log(conf['baseURL']);\n    if (process.env.BROWSER) {\n        delete conf[\"baseURL\"];\n    }\n    return axios.create(\n        conf\n    );\n}\n\nfunction handleError(dispatch, error) {\n    if (process.env.BROWSER) {\n        if (error.status == 404) {\n        } else if (error.status == 401) {\n            dispatch(logout());\n            // dispatch(dispatch => {\n            //     dispatch({type: \"LOGOUT\"});\n            //     // cookie.remove(\"mtoken\");\n            //     cookie.remove(\"muser\",{\"path\": '/'});\n            //     browserHistory.push('/login');\n            // });\n        }\n    } else {\n        throw error.status\n    }\n}\n\nfunction fetchSetAfterMethod(promise) {\n    promise.after = function (success, error) {\n        if (!error) {\n            this.then(function (response) {\n                success(response.data, response.status, response.headers);\n            });\n        } else {\n            this.then(function (response) {\n                let status = response.status;\n                if (status >= 200 && status < 300 || status === 304) {\n                    if (success)\n                        success(response.data, response.status, response.headers);\n                } else {\n                    if (error)\n                        error(response.data, response.status, response.headers);\n                }\n            });\n        }\n        return promise;\n    };\n    return promise;\n}\n\nexport function apiFactory(method, successCB, errorCB, actions = [], _url, _params, keys) {\n    var params = Object.assign({},_params);\n    var url =  _url;\n    var match1 = url.match(/\\/\\:[a-zA-Z]+/g);\n    if (match1 && _params) {\n        for (let i of match1) {\n            let key = i.replace(\"/:\", \"\");\n            if (params[key]) {\n                url = url.replace(i, \"/\" + params[key]);\n                delete params[key];\n            }\n        }\n    }\n    var match2 = url.match(/\\/\\:[a-zA-Z]+/g);\n\n    if (match2) {\n        for (let i in match2) {\n            url = url.replace(match2[i], \"\");\n        }\n    }\n    console.log(\"url:\"+url);\n\n    // if (params) {\n    //     for (let i in params) {\n    //         url = url.replace(\"/:\" + i, \"/\" + params[i]);\n    //     }\n    // }\n    //\n    // var _p = url.match(/\\/\\:[a-zA-Z]+/g);\n    // if (_p) {\n    //     for (let i in _p) {\n    //         url = url.replace(_p[i], \"\");\n    //     }\n    // }\n\n    keys && (keys = keys.map(key => params[key]));\n\n    var request_action;\n    var receive_action;\n    var error_action;\n    actions[0] && (receive_action = actions[0]);\n    actions[1] && (request_action = actions[1]);\n    actions[2] && (error_action = actions[2]);\n    return dispatch => {\n        if (request_action)\n            dispatch(request_action());\n\n\n        if (method === \"get\") {\n            const promise = fetch().get(url, {params: {...params, _: new Date().getTime()}})\n                .then(function (response) {\n                    dispatch(receive_action(response.data, keys));\n                    let status = response.status;\n                    if (status >= 200 && status < 300 || status === 304) {\n                        if (successCB)\n                            successCB(response.data, response.status, response.headers);\n                    } else {\n                        if (errorCB)\n                            errorCB(response.data, response.status, response.headers);\n                    }\n                    return response;\n\n                })\n                .catch(function (err) {\n                    handleError(dispatch, err);\n                    if (error_action) {\n                        dispatch(error_action(err, keys));\n                    }\n                    if (errorCB)\n                        errorCB(err.data, err.status, err.headers);\n                    return err;\n                });\n            // fetchSetAfterMethod(promise);\n\n\n            return promise\n        } else {\n            const promise = fetch()[method](url, params)\n                .then(function (response) {\n                    if (method === \"delete\") {\n                        dispatch(receive_action(response.data, params, keys));\n                    } else {\n                        dispatch(receive_action(response.data, keys));\n                    }\n\n                    let status = response.status;\n                    if (status >= 200 && status < 300 || status === 304) {\n                        if (successCB)\n                            successCB(response.data, response.status, response.headers);\n                    } else {\n                        if (errorCB)\n                            errorCB(response.data, response.status, response.headers);\n                    }\n                    return response;\n                })\n                .catch(function (err) {\n                    handleError(dispatch, err);\n                    if (error_action) {\n                        dispatch(error_action(err, keys));\n                    }\n                    if (errorCB)\n                        errorCB(err.data, err.status, err.headers);\n                    return err;\n\n                });\n            // fetchSetAfterMethod(promise);\n\n\n            return promise;\n        }\n\n    }\n}\n\n\n/**\n * 文件上传接口\n * @param fileId\n * @param e\n * @returns {*|axios.Promise}\n * uploadFile(e){\n *      upload(e).then(function (res) {\n *\n *      }).catch(function (error) {\n *\n *      })\n * }\n * <FormControl type=\"file\" id=\"headerImg\" onChange={this.uploadFile.bind(this)}/>\n */\nexport function upload(e, progressCb) {\n    const data = new FormData();\n    const file = e.target;\n    for (var i = 0; i < file.files.length; i++) {\n        data.append('file', file.files[i]);\n    }\n    const config = {\n        progress: function (progressEvent) {\n            var percentCompleted = progressEvent.loaded / progressEvent.total;\n            if(progressCb){\n                progressCb(percentCompleted);\n            }\n        },\n    };\n\n    var promise = fetchSetAfterMethod(\n        fetch().post('/api/manage/upload', data, config)\n            .then(function (response) {\n                return response;\n            }).catch(function (response) {\n            return response;\n        })\n    );\n    // promise.after = function (success, error) {\n    //     if (!error) {\n    //         this.then(function (response) {\n    //             success(response.data, response.status, response.headers);\n    //         });\n    //     } else {\n    //         this.then(function (response) {\n    //             let status = response.status;\n    //             if (status >= 200 && status < 300 || status === 304) {\n    //                 if (success)\n    //                     success(response.data, response.status, response.headers);\n    //             } else {\n    //                 if (error)\n    //                     error(response.data, response.status, response.headers);\n    //             }\n    //         });\n    //     }\n    //     return promise;\n    // };\n\n    return promise;\n}\n\nexport function postAPI(success,error,actions = [], url, params, keys) {\n    return apiFactory(\"post\",success,error, actions, url, params, keys);\n}\n\nexport function getAPI(success,error,actions = [], url, params, keys) {\n    return apiFactory(\"get\",success,error, actions, url, params,keys);\n}\nexport function putAPI(success,error,actions = [], url, params,  keys) {\n    return apiFactory(\"put\",success,error, actions, url, params, keys);\n}\nexport function deleteAPI(success,error,actions = [], url, params, keys) {\n    return apiFactory(\"delete\",success,error, actions, url, params, keys);\n}\n"]}