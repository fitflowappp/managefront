{"version":3,"sources":["../../../src/components/modal/NetworkinfoModal.js"],"names":["NetworkinfoModal","props","state","show","networkinfo","openGId","name","gender","wechat","wechatGpLimit","phone","phoneGpLimit","industry","province","city","company","career","desc","resource","requirement","avatarUrl","citysIndex","componentDidMount","queryIndustry","queryAddress","componentWillReceiveProps","nextProps","editNetworkinfo","provinces","i","length","setState","_handleValidSubmit","e","preventDefault","postNetworkinfo","query","that","res","closeModal","uploadFile","target","after","contentUri","set","getAttribute","value","index","selectedIndex","Number","companyName","split","openModal","render","industrys","bind","map","citys","mapStateToProps","mapDispatchToProps","dispatch","withRef"],"mappings":"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","file":"NetworkinfoModal.js","sourcesContent":["/**\r\n * Created by qwr on 2017/6/29.\r\n */\r\nimport React, {Component, PropTypes} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {bindActionCreators} from 'redux'\r\nimport {withRouter} from \"react-router\";\r\nimport {Button, Modal, Form, FormControl, FormGroup, ControlLabel, Col, Radio} from \"react-bootstrap\"\r\nimport {networkinfoActions} from '../../actions'\r\nimport Alert from '../Alert'\r\nimport {upload} from \"../../common/fetch\";\r\nclass NetworkinfoModal extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state =\r\n            {\r\n                show: false,\r\n                networkinfo: {\r\n                    openGId:'',\r\n                    name: '',\r\n                    gender: 1,\r\n                    wechat: '',\r\n                    wechatGpLimit: 0,\r\n                    phone: '',\r\n                    phoneGpLimit: 0,\r\n                    industry: '',\r\n                    province: '',\r\n                    city: '',\r\n                    company: {\r\n                        name: '',\r\n                        career: '',\r\n                        desc: '',\r\n                    },\r\n                    resource: '',\r\n                    requirement: '',\r\n                    avatarUrl: '',\r\n                },\r\n                citysIndex: 1,\r\n            }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.queryIndustry();\r\n        this.queryAddress();\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        const editNetworkinfo = nextProps.editNetworkinfo;\r\n        if (editNetworkinfo) {\r\n            const provinces = this.props.networkinfo.provinces || [];\r\n            var citysIndex=1;\r\n            for(var i=0;i<provinces.length;i++){\r\n                if(provinces[i].province==editNetworkinfo.province){\r\n                    citysIndex=i+1;\r\n                }\r\n            }\r\n            this.setState({\r\n                networkinfo: editNetworkinfo,\r\n                citysIndex:citysIndex,\r\n            })\r\n        }else{\r\n            this.setState({\r\n                networkinfo: {\r\n                    openGId:'',\r\n                    name: '',\r\n                    gender: 1,\r\n                    wechat: '',\r\n                    wechatGpLimit: 0,\r\n                    phone: '',\r\n                    phoneGpLimit: 0,\r\n                    industry: '',\r\n                    province: '',\r\n                    city: '',\r\n                    company: {\r\n                        name: '',\r\n                        career: '',\r\n                        desc: '',\r\n                    },\r\n                    resource: '',\r\n                    requirement: '',\r\n                    avatarUrl: '',\r\n                },\r\n            })\r\n        }\r\n    }\r\n\r\n    queryIndustry() {\r\n        const {industry} = this.props;\r\n        industry({});\r\n    }\r\n\r\n    queryAddress() {\r\n        const {province} = this.props;\r\n        province({});\r\n    }\r\n\r\n    _handleValidSubmit(e) {\r\n        e.preventDefault();\r\n        const {postNetworkinfo,query} = this.props;\r\n        const networkinfo = this.state.networkinfo;\r\n        const that = this;\r\n        postNetworkinfo(networkinfo, function (res) {\r\n            query();\r\n            that.closeModal();\r\n        });\r\n    };\r\n\r\n\r\n    uploadFile(e) {\r\n        const target = e.target;\r\n        const name = target.name;\r\n        const that = this;\r\n        var networkinfo = this.state.networkinfo;\r\n        upload(e).after(function (res) {\r\n            networkinfo[name] = res[0].contentUri;\r\n            that.setState({\r\n                networkinfo: that.state.networkinfo,\r\n            })\r\n        });\r\n    }\r\n\r\n    set(e) {\r\n        const name = e.target.getAttribute('name');\r\n        const value = e.target.value;\r\n        var networkinfo = this.state.networkinfo;\r\n        if (name == 'province') {\r\n            var index = e.target.selectedIndex;\r\n            this.setState({\r\n                citysIndex: index,\r\n            })\r\n        }\r\n        if (name == 'wechatGpLimit' || name == 'phoneGpLimit' || name == 'gender') {\r\n            networkinfo[name] = Number(value);\r\n        } else if (name == 'company_name' || name == 'company_career' || name == 'company_desc') {\r\n            var companyName = name.split('_')[1];\r\n            networkinfo.company[companyName] = value;\r\n        } else {\r\n            networkinfo[name] = value;\r\n        }\r\n        this.setState({\r\n            networkinfo: networkinfo,\r\n        });\r\n    }\r\n\r\n    openModal() {\r\n        this.setState({\r\n            show: true\r\n        })\r\n    }\r\n\r\n    closeModal() {\r\n        this.setState({\r\n            show: false,\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const editNetworkinfo=this.props.editNetworkinfo;\r\n        const industrys = this.props.networkinfo.industrys || [];\r\n        const provinces = this.props.networkinfo.provinces || [];\r\n        const networkinfo = this.state.networkinfo;\r\n        const citysIndex = this.state.citysIndex - 1;\r\n        return (\r\n            <div className=\"static-modal\">\r\n                <Modal show={this.state.show} backdrop={false}>\r\n\r\n                    <Form horizontal onSubmit={this._handleValidSubmit.bind(this)}>\r\n                        <Modal.Header>\r\n                            <Modal.Title>{editNetworkinfo ? '编辑人脉' : '新建人脉'}</Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body>\r\n                            <FormGroup controlId=\"openGId\" >\r\n                                <Col componentClass={ControlLabel} sm={2}>\r\n                                    群ID\r\n                                </Col>\r\n                                <Col sm={10}>\r\n                                    <FormControl type=\"text\" name=\"openGId\"  value={networkinfo.openGId}\r\n                                                 onChange={this.set.bind(this)}/>\r\n                                </Col>\r\n                            </FormGroup>\r\n                            <FormGroup controlId=\"name\" >\r\n                                <Col componentClass={ControlLabel} sm={2}>\r\n                                    姓名\r\n                                </Col>\r\n                                <Col sm={10}>\r\n                                    <FormControl type=\"text\" name=\"name\"  value={networkinfo.name}\r\n                                                 onChange={this.set.bind(this)} required/>\r\n                                </Col>\r\n                            </FormGroup>\r\n                            <FormGroup controlId=\"gender\">\r\n                                <Col componentClass={ControlLabel} sm={2}>\r\n                                    性别\r\n                                </Col>\r\n                                <Col sm={10}>\r\n                                    <Radio name=\"gender\" value=\"1\" checked={networkinfo.gender == 1}\r\n                                           onChange={this.set.bind(this)} inline>男</Radio>\r\n                                    <Radio name=\"gender\" value=\"2\" checked={networkinfo.gender == 2}\r\n                                           onChange={this.set.bind(this)} inline>女</Radio>\r\n                                </Col>\r\n                            </FormGroup>\r\n                            <FormGroup controlId=\"wechat\">\r\n                                <Col componentClass={ControlLabel} sm={2}>\r\n                                    微信\r\n                                </Col>\r\n                                <Col sm={10}>\r\n                                    <FormControl type=\"text\" name=\"wechat\" value={networkinfo.wechat} onChange={this.set.bind(this)} required/>\r\n                                </Col>\r\n                            </FormGroup>\r\n                            <FormGroup controlId=\"wechatGpLimit\">\r\n                                <Col componentClass={ControlLabel} sm={2}>\r\n                                    微信限制\r\n                                </Col>\r\n                                <Col sm={10}>\r\n                                    <Radio name=\"wechatGpLimit\" value=\"0\" inline checked={networkinfo.wechatGpLimit == 0}\r\n                                           onChange={this.set.bind(this)}>公开</Radio>\r\n                                    <Radio name=\"wechatGpLimit\" value=\"1\" inline checked={networkinfo.wechatGpLimit == 1}\r\n                                           onChange={this.set.bind(this)}>仅群内可见</Radio>\r\n                                </Col>\r\n                            </FormGroup>\r\n                            <FormGroup controlId=\"phone\">\r\n                                <Col componentClass={ControlLabel} sm={2}>\r\n                                    电话\r\n                                </Col>\r\n                                <Col sm={10}>\r\n                                    <FormControl type=\"text\" name=\"phone\" value={networkinfo.phone} onChange={this.set.bind(this)} required/>\r\n                                </Col>\r\n                            </FormGroup>\r\n                            <FormGroup controlId=\"phoneGpLimit\">\r\n                                <Col componentClass={ControlLabel} sm={2}>\r\n                                    电话限制\r\n                                </Col>\r\n                                <Col sm={10}>\r\n                                    <Radio name=\"phoneGpLimit\" value=\"0\" inline checked={networkinfo.phoneGpLimit == 0}\r\n                                           onChange={this.set.bind(this)}>公开</Radio>\r\n                                    <Radio name=\"phoneGpLimit\" value=\"1\" inline checked={networkinfo.phoneGpLimit == 1}\r\n                                           onChange={this.set.bind(this)}>仅群内可见</Radio>\r\n                                </Col>\r\n                            </FormGroup>\r\n                            <FormGroup controlId=\"industry\">\r\n                                <Col componentClass={ControlLabel} sm={2}>\r\n                                    行业\r\n                                </Col>\r\n                                <Col sm={10}>\r\n                                    <FormControl componentClass=\"select\" name=\"industry\" value={networkinfo.industry} onChange={this.set.bind(this)} required>\r\n                                        <option value=\"\">请选择</option>\r\n                                        {industrys.map((industry, index) =>\r\n                                            <option key={index} value={industry.name}>{industry.name}</option>\r\n                                        )}\r\n                                    </FormControl>\r\n                                </Col>\r\n                            </FormGroup>\r\n                            <FormGroup controlId=\"province_city\">\r\n                                <Col componentClass={ControlLabel} sm={2}>\r\n                                    城市\r\n                                </Col>\r\n                                <Col sm={5}>\r\n                                    <FormControl componentClass=\"select\" name=\"province\" value={networkinfo.province} onChange={this.set.bind(this)} required>\r\n                                        <option value=\"\">请选择</option>\r\n                                        {provinces.map((province, index) =>\r\n                                            <option key={index} value={province.province}>{province.province}</option>\r\n                                        )}\r\n                                    </FormControl>\r\n                                </Col>\r\n                                <Col sm={5}>\r\n                                    <FormControl componentClass=\"select\" name=\"city\" value={networkinfo.city} onChange={this.set.bind(this)}>\r\n                                        <option value=\"\">请选择</option>\r\n                                        {provinces.length > 0 && provinces[citysIndex].citys.map((city, index) =>\r\n                                            <option key={index} value={city}>{city}</option>\r\n                                        )}\r\n                                    </FormControl>\r\n                                </Col>\r\n                            </FormGroup>\r\n                            <FormGroup controlId=\"company_name\">\r\n                                <Col componentClass={ControlLabel} sm={2}>\r\n                                    公司名称\r\n                                </Col>\r\n                                <Col sm={10}>\r\n                                    <FormControl type=\"text\" name=\"company_name\" value={networkinfo.company.name} onChange={this.set.bind(this)}/>\r\n                                </Col>\r\n                            </FormGroup>\r\n                            <FormGroup controlId=\"company_career\">\r\n                                <Col componentClass={ControlLabel} sm={2}>\r\n                                    公司职位\r\n                                </Col>\r\n                                <Col sm={10}>\r\n                                    <FormControl type=\"text\" name=\"company_career\" value={networkinfo.company.career}  onChange={this.set.bind(this)}/>\r\n                                </Col>\r\n                            </FormGroup>\r\n                            <FormGroup controlId=\"company_desc\">\r\n                                <Col componentClass={ControlLabel} sm={2}>\r\n                                    公司项目描述\r\n                                </Col>\r\n                                <Col sm={10}>\r\n                                    <FormControl type=\"text\" name=\"company_desc\" value={networkinfo.company.desc}  onChange={this.set.bind(this)}/>\r\n                                </Col>\r\n                            </FormGroup>\r\n                            <FormGroup controlId=\"resource\">\r\n                                <Col componentClass={ControlLabel} sm={2}>\r\n                                    资源\r\n                                </Col>\r\n                                <Col sm={10}>\r\n                                    <FormControl componentClass=\"textarea\" maxLength=\"100\" name=\"resource\"\r\n                                                 placeholder=\"100字内\" value={networkinfo.resource}  onChange={this.set.bind(this)} required/>\r\n                                </Col>\r\n                            </FormGroup>\r\n                            <FormGroup controlId=\"requirement\">\r\n                                <Col componentClass={ControlLabel} sm={2}>\r\n                                    需求\r\n                                </Col>\r\n                                <Col sm={10}>\r\n                                    <FormControl componentClass=\"textarea\" maxLength=\"100\" name=\"requirement\"\r\n                                                 placeholder=\"100字内\" value={networkinfo.requirement}  onChange={this.set.bind(this)}/>\r\n                                </Col>\r\n                            </FormGroup>\r\n                            <FormGroup controlId=\"headerImg\">\r\n                                <Col componentClass={ControlLabel} sm={2}>\r\n                                    头像\r\n                                </Col>\r\n                                <Col sm={10}>\r\n                                    <FormControl type=\"file\" name=\"avatarUrl\" onChange={this.uploadFile.bind(this)}/>\r\n                                    {networkinfo.avatarUrl &&\r\n                                    <img src={networkinfo.avatarUrl} alt=\"头像\" width='50' className=\"m-t5\"/>}\r\n                                </Col>\r\n                            </FormGroup>\r\n                        </Modal.Body>\r\n                        <Modal.Footer>\r\n                            <Button bsStyle=\"primary\" type=\"submit\">确认</Button>\r\n                            <Button bsStyle=\"default\" onClick={this.closeModal.bind(this)}>取消</Button>\r\n                        </Modal.Footer>\r\n\r\n                    </Form>\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        networkinfo: state.networkinfo\r\n    }\r\n}\r\nfunction mapDispatchToProps(dispatch) {\r\n    return bindActionCreators(networkinfoActions, dispatch)\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps, null, {withRef: true})(NetworkinfoModal)"]}