{"version":3,"sources":["../../../src/components/modal/ChallengesListModal.js"],"names":["ChallengesListModal","props","state","challenges","show","componentDidMount","queryChallenges","that","res","setState","componentWillReceiveProps","nextProps","_handleValidSubmit","event","preventDefault","pushChallenges","index","$","val","closeModal","openModal","userNum","render","bind","map","challenge","id","title","mapDispatchToProps","dispatch","withRef"],"mappings":";;;;;;;;;;;;;;;;;;AAGA;;;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;AARA;;;IASMA,mB;;;AACF,iCAAYC,KAAZ,EAAmB;AAAA;;AAAA,mEACf,sBAAMA,KAAN,CADe;;AAEf,cAAKC,KAAL,GACI;AACIC,wBAAW,EADf;AAEIC,kBAAM;AAFV,SADJ;AAFe;AAOlB;;kCACDC,iB,gCAAoB;AAAA,YACTC,eADS,GACU,KAAKL,KADf,CACTK,eADS;;AAEhB,YAAMC,OAAK,IAAX;AACAD,wBAAgB,EAAhB,EAAmB,UAAUE,GAAV,EAAe;AAC9BD,iBAAKE,QAAL,CAAc;AACVN,4BAAWK;AADD,aAAd;AAGH,SAJD;AAKH,K;;kCACDE,yB,sCAA0BC,S,EAAW,CAEpC,C;;kCACDC,kB,+BAAmBC,K,EAAM;AACrBA,cAAMC,cAAN;AADqB,YAEdC,cAFc,GAEI,KAAKd,KAFT,CAEdc,cAFc;;AAGrB,YAAIC,QAAMC,EAAE,iCAAF,EAAqCC,GAArC,EAAV;AACA,YAAIf,aAAW,KAAKD,KAAL,CAAWC,UAA1B;AACAY,uBAAeZ,WAAWa,KAAX,CAAf;AACA,aAAKG,UAAL;AACH,K;;kCAEDC,S,wBAAY;AACR,aAAKX,QAAL,CAAc;AACVL,kBAAM;AADI,SAAd;AAGH,K;;kCAEDe,U,yBAAa;AACT,aAAKV,QAAL,CAAc;AACVL,kBAAM,KADI;AAEViB,qBAAQ;AAFE,SAAd;AAIH,K;;kCACDC,M,qBAAS;AACL,YAAMnB,aAAW,KAAKD,KAAL,CAAWC,UAA5B;AACA,eACI;AAAA;AAAA,cAAK,WAAU,cAAf;AACI;AAAA;AAAA,kBAAO,MAAM,KAAKD,KAAL,CAAWE,IAAxB,EAA8B,UAAU,KAAxC;AACI;AAAA;AAAA,sBAAM,gBAAN,EAAiB,UAAU,KAAKQ,kBAAL,CAAwBW,IAAxB,CAA6B,IAA7B,CAA3B;AACI;AAAA,8CAAO,MAAP;AAAA;AACI;AAAA,kDAAO,KAAP;AAAA;AAAA;AAAA;AADJ,qBADJ;AAII;AAAA,8CAAO,IAAP;AAAA;AACKpB,mCAAWqB,GAAX,CAAe,UAACC,SAAD,EAAYT,KAAZ;AAAA,mCACZ;AAAA;AAAA,kCAAK,WAAU,MAAf,EAAsB,KAAKA,KAA3B;AACI,yEAAO,MAAK,OAAZ,EAAoB,OAAOA,KAA3B,EAAkC,MAAK,WAAvC,GADJ;AAEKS,0CAAUC,EAFf;AAAA;AAEoBD,0CAAUE;AAF9B,6BADY;AAAA,yBAAf;AADL,qBAJJ;AAYI;AAAA,8CAAO,MAAP;AAAA;AACI;AAAA;AAAA,8BAAQ,SAAQ,SAAhB,EAA0B,MAAK,QAA/B;AAAA;AAAA,yBADJ;AAEI;AAAA;AAAA,8BAAQ,SAAQ,SAAhB,EAA0B,SAAS,KAAKR,UAAL,CAAgBI,IAAhB,CAAqB,IAArB,CAAnC;AAAA;AAAA;AAFJ;AAZJ;AADJ;AADJ,SADJ;AAuBH,K;;;;;AAEL,SAASK,kBAAT,CAA4BC,QAA5B,EAAsC;AAClC,WAAO,2DAAsCA,QAAtC,CAAP;AACH;kBACc,yBAAQ,IAAR,EAAcD,kBAAd,EAAkC,IAAlC,EAAwC,EAACE,SAAS,IAAV,EAAxC,EAAyD9B,mBAAzD,C","file":"ChallengesListModal.js","sourcesContent":["/**\r\n * Created by qwr on 2017/9/18.\r\n */\r\nimport React, {Component, PropTypes} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {bindActionCreators} from 'redux'\r\nimport {challengesActions} from '../../actions'\r\nimport {Button, Modal, Form, FormControl, FormGroup, ControlLabel, Col} from \"react-bootstrap\"\r\nimport Alert from '../Alert'\r\nclass ChallengesListModal extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state =\r\n            {\r\n                challenges:[],\r\n                show: false,\r\n            }\r\n    }\r\n    componentDidMount() {\r\n        const {queryChallenges} = this.props;\r\n        const that=this;\r\n        queryChallenges({},function (res) {\r\n            that.setState({\r\n                challenges:res,\r\n            })\r\n        });\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n\r\n    }\r\n    _handleValidSubmit(event){\r\n        event.preventDefault();\r\n        const {pushChallenges} = this.props;\r\n        var index=$(\"input[name='challenge']:checked\").val();\r\n        var challenges=this.state.challenges;\r\n        pushChallenges(challenges[index]);\r\n        this.closeModal();\r\n    }\r\n\r\n    openModal() {\r\n        this.setState({\r\n            show: true\r\n        })\r\n    }\r\n\r\n    closeModal() {\r\n        this.setState({\r\n            show: false,\r\n            userNum:'',\r\n        })\r\n    }\r\n    render() {\r\n        const challenges=this.state.challenges;\r\n        return (\r\n            <div className=\"static-modal\">\r\n                <Modal show={this.state.show} backdrop={false}>\r\n                    <Form horizontal onSubmit={this._handleValidSubmit.bind(this)}>\r\n                        <Modal.Header>\r\n                            <Modal.Title>Pick a Challenge</Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body>\r\n                            {challenges.map((challenge, index) =>\r\n                                <div className=\"m-t5\" key={index}>\r\n                                    <input type=\"radio\" value={index} name=\"challenge\" />\r\n                                    {challenge.id}:{challenge.title}\r\n                                </div>\r\n                            )}\r\n                        </Modal.Body>\r\n                        <Modal.Footer>\r\n                            <Button bsStyle=\"primary\" type=\"submit\">Save</Button>\r\n                            <Button bsStyle=\"default\" onClick={this.closeModal.bind(this)}>Back</Button>\r\n                        </Modal.Footer>\r\n                    </Form>\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nfunction mapDispatchToProps(dispatch) {\r\n    return bindActionCreators(challengesActions, dispatch)\r\n}\r\nexport default connect(null, mapDispatchToProps, null, {withRef: true})(ChallengesListModal)"]}