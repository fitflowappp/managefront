{"version":3,"sources":["../../../src/components/draft/moveSelectionBackward.js"],"names":["moveSelectionBackward","editorState","maxDistance","selection","getSelection","content","getCurrentContent","key","getStartKey","offset","getStartOffset","focusKey","focusOffset","keyBefore","getKeyBefore","blockBefore","getBlockForKey","getText","length","merge","isBackward","module","exports"],"mappings":"AAAA;;;;;;;;;;;;AAYA;;;;;;;;AAQA;;AAEA,SAASA,qBAAT,CAA+BC,WAA/B,EAA4CC,WAA5C,EAAyD;AACvD,MAAIC,YAAYF,YAAYG,YAAZ,EAAhB;AACA,MAAIC,UAAUJ,YAAYK,iBAAZ,EAAd;AACA,MAAIC,MAAMJ,UAAUK,WAAV,EAAV;AACA,MAAIC,SAASN,UAAUO,cAAV,EAAb;;AAEA,MAAIC,WAAWJ,GAAf;AACA,MAAIK,cAAc,CAAlB;;AAEA,MAAIV,cAAcO,MAAlB,EAA0B;AACxB,QAAII,YAAYR,QAAQS,YAAR,CAAqBP,GAArB,CAAhB;AACA,QAAIM,aAAa,IAAjB,EAAuB;AACrBF,iBAAWJ,GAAX;AACD,KAFD,MAEO;AACLI,iBAAWE,SAAX;AACA,UAAIE,cAAcV,QAAQW,cAAR,CAAuBH,SAAvB,CAAlB;AACAD,oBAAcG,YAAYE,OAAZ,GAAsBC,MAApC;AACD;AACF,GATD,MASO;AACLN,kBAAcH,SAASP,WAAvB;AACD;;AAED,SAAOC,UAAUgB,KAAV,CAAgB;AACrBR,cAAUA,QADW;AAErBC,iBAAaA,WAFQ;AAGrBQ,gBAAY;AAHS,GAAhB,CAAP;AAKD;;AAEDC,OAAOC,OAAP,GAAiBtB,qBAAjB","file":"moveSelectionBackward.js","sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule moveSelectionBackward\n * \n */\n\n/**\n * Given a collapsed selection, move the focus `maxDistance` backward within\n * the selected block. If the selection will go beyond the start of the block,\n * move focus to the end of the previous block, but no further.\n *\n * This function is not Unicode-aware, so surrogate pairs will be treated\n * as having length 2.\n */\n'use strict';\n\nfunction moveSelectionBackward(editorState, maxDistance) {\n  var selection = editorState.getSelection();\n  var content = editorState.getCurrentContent();\n  var key = selection.getStartKey();\n  var offset = selection.getStartOffset();\n\n  var focusKey = key;\n  var focusOffset = 0;\n\n  if (maxDistance > offset) {\n    var keyBefore = content.getKeyBefore(key);\n    if (keyBefore == null) {\n      focusKey = key;\n    } else {\n      focusKey = keyBefore;\n      var blockBefore = content.getBlockForKey(keyBefore);\n      focusOffset = blockBefore.getText().length;\n    }\n  } else {\n    focusOffset = offset - maxDistance;\n  }\n\n  return selection.merge({\n    focusKey: focusKey,\n    focusOffset: focusOffset,\n    isBackward: true\n  });\n}\n\nmodule.exports = moveSelectionBackward;"]}