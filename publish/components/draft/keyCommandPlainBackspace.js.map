{"version":3,"sources":["../../../src/components/draft/keyCommandPlainBackspace.js"],"names":["EditorState","require","UnicodeUtils","moveSelectionBackward","removeTextWithStrategy","keyCommandPlainBackspace","editorState","afterRemoval","strategyState","selection","getSelection","content","getCurrentContent","key","getAnchorKey","offset","getAnchorOffset","charBehind","getBlockForKey","getText","getUTF16Length","push","set","isCollapsed","module","exports"],"mappings":"AAAA;;;;;;;;;;;;AAYA;;AAEA,IAAIA,cAAcC,QAAQ,eAAR,CAAlB;AACA,IAAIC,eAAeD,QAAQ,uBAAR,CAAnB;;AAEA,IAAIE,wBAAwBF,QAAQ,yBAAR,CAA5B;AACA,IAAIG,yBAAyBH,QAAQ,0BAAR,CAA7B;;AAEA;;;;;AAKA,SAASI,wBAAT,CAAkCC,WAAlC,EAA+C;AAC7C,MAAIC,eAAeH,uBAAuBE,WAAvB,EAAoC,UAAUE,aAAV,EAAyB;AAC9E,QAAIC,YAAYD,cAAcE,YAAd,EAAhB;AACA,QAAIC,UAAUH,cAAcI,iBAAd,EAAd;AACA,QAAIC,MAAMJ,UAAUK,YAAV,EAAV;AACA,QAAIC,SAASN,UAAUO,eAAV,EAAb;AACA,QAAIC,aAAaN,QAAQO,cAAR,CAAuBL,GAAvB,EAA4BM,OAA5B,GAAsCJ,SAAS,CAA/C,CAAjB;AACA,WAAOZ,sBAAsBK,aAAtB,EAAqCS,aAAaf,aAAakB,cAAb,CAA4BH,UAA5B,EAAwC,CAAxC,CAAb,GAA0D,CAA/F,CAAP;AACD,GAPkB,EAOhB,UAPgB,CAAnB;;AASA,MAAIV,iBAAiBD,YAAYM,iBAAZ,EAArB,EAAsD;AACpD,WAAON,WAAP;AACD;;AAED,MAAIG,YAAYH,YAAYI,YAAZ,EAAhB;AACA,SAAOV,YAAYqB,IAAZ,CAAiBf,WAAjB,EAA8BC,aAAae,GAAb,CAAiB,iBAAjB,EAAoCb,SAApC,CAA9B,EAA8EA,UAAUc,WAAV,KAA0B,qBAA1B,GAAkD,cAAhI,CAAP;AACD;;AAEDC,OAAOC,OAAP,GAAiBpB,wBAAjB","file":"keyCommandPlainBackspace.js","sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule keyCommandPlainBackspace\n * \n */\n\n'use strict';\n\nvar EditorState = require('./EditorState');\nvar UnicodeUtils = require('fbjs/lib/UnicodeUtils');\n\nvar moveSelectionBackward = require('./moveSelectionBackward');\nvar removeTextWithStrategy = require('./removeTextWithStrategy');\n\n/**\n * Remove the selected range. If the cursor is collapsed, remove the preceding\n * character. This operation is Unicode-aware, so removing a single character\n * will remove a surrogate pair properly as well.\n */\nfunction keyCommandPlainBackspace(editorState) {\n  var afterRemoval = removeTextWithStrategy(editorState, function (strategyState) {\n    var selection = strategyState.getSelection();\n    var content = strategyState.getCurrentContent();\n    var key = selection.getAnchorKey();\n    var offset = selection.getAnchorOffset();\n    var charBehind = content.getBlockForKey(key).getText()[offset - 1];\n    return moveSelectionBackward(strategyState, charBehind ? UnicodeUtils.getUTF16Length(charBehind, 0) : 1);\n  }, 'backward');\n\n  if (afterRemoval === editorState.getCurrentContent()) {\n    return editorState;\n  }\n\n  var selection = editorState.getSelection();\n  return EditorState.push(editorState, afterRemoval.set('selectionBefore', selection), selection.isCollapsed() ? 'backspace-character' : 'remove-range');\n}\n\nmodule.exports = keyCommandPlainBackspace;"]}