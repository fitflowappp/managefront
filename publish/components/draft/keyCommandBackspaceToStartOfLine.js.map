{"version":3,"sources":["../../../src/components/draft/keyCommandBackspaceToStartOfLine.js"],"names":["EditorState","require","expandRangeToStartOfLine","getDraftEditorSelectionWithNodes","moveSelectionBackward","removeTextWithStrategy","keyCommandBackspaceToStartOfLine","editorState","afterRemoval","strategyState","selection","getSelection","isCollapsed","getAnchorOffset","domSelection","global","range","getRangeAt","endContainer","endOffset","startContainer","startOffset","selectionState","getCurrentContent","push","module","exports"],"mappings":"AAAA;;;;;;;;;;;;AAYA;;AAEA,IAAIA,cAAcC,QAAQ,eAAR,CAAlB;;AAEA,IAAIC,2BAA2BD,QAAQ,4BAAR,CAA/B;AACA,IAAIE,mCAAmCF,QAAQ,oCAAR,CAAvC;AACA,IAAIG,wBAAwBH,QAAQ,yBAAR,CAA5B;AACA,IAAII,yBAAyBJ,QAAQ,0BAAR,CAA7B;;AAEA,SAASK,gCAAT,CAA0CC,WAA1C,EAAuD;AACrD,MAAIC,eAAeH,uBAAuBE,WAAvB,EAAoC,UAAUE,aAAV,EAAyB;AAC9E,QAAIC,YAAYD,cAAcE,YAAd,EAAhB;AACA,QAAID,UAAUE,WAAV,MAA2BF,UAAUG,eAAV,OAAgC,CAA/D,EAAkE;AAChE,aAAOT,sBAAsBK,aAAtB,EAAqC,CAArC,CAAP;AACD;;AAED,QAAIK,eAAeC,OAAOJ,YAAP,EAAnB;AACA,QAAIK,QAAQF,aAAaG,UAAb,CAAwB,CAAxB,CAAZ;AACAD,YAAQd,yBAAyBc,KAAzB,CAAR;;AAEA,WAAOb,iCAAiCM,aAAjC,EAAgD,IAAhD,EAAsDO,MAAME,YAA5D,EAA0EF,MAAMG,SAAhF,EAA2FH,MAAMI,cAAjG,EAAiHJ,MAAMK,WAAvH,EAAoIC,cAA3I;AACD,GAXkB,EAWhB,UAXgB,CAAnB;;AAaA,MAAId,iBAAiBD,YAAYgB,iBAAZ,EAArB,EAAsD;AACpD,WAAOhB,WAAP;AACD;;AAED,SAAOP,YAAYwB,IAAZ,CAAiBjB,WAAjB,EAA8BC,YAA9B,EAA4C,cAA5C,CAAP;AACD;;AAEDiB,OAAOC,OAAP,GAAiBpB,gCAAjB","file":"keyCommandBackspaceToStartOfLine.js","sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule keyCommandBackspaceToStartOfLine\n * \n */\n\n'use strict';\n\nvar EditorState = require('./EditorState');\n\nvar expandRangeToStartOfLine = require('./expandRangeToStartOfLine');\nvar getDraftEditorSelectionWithNodes = require('./getDraftEditorSelectionWithNodes');\nvar moveSelectionBackward = require('./moveSelectionBackward');\nvar removeTextWithStrategy = require('./removeTextWithStrategy');\n\nfunction keyCommandBackspaceToStartOfLine(editorState) {\n  var afterRemoval = removeTextWithStrategy(editorState, function (strategyState) {\n    var selection = strategyState.getSelection();\n    if (selection.isCollapsed() && selection.getAnchorOffset() === 0) {\n      return moveSelectionBackward(strategyState, 1);\n    }\n\n    var domSelection = global.getSelection();\n    var range = domSelection.getRangeAt(0);\n    range = expandRangeToStartOfLine(range);\n\n    return getDraftEditorSelectionWithNodes(strategyState, null, range.endContainer, range.endOffset, range.startContainer, range.startOffset).selectionState;\n  }, 'backward');\n\n  if (afterRemoval === editorState.getCurrentContent()) {\n    return editorState;\n  }\n\n  return EditorState.push(editorState, afterRemoval, 'remove-range');\n}\n\nmodule.exports = keyCommandBackspaceToStartOfLine;"]}