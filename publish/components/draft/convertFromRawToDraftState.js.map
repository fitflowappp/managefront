{"version":3,"sources":["../../../src/components/draft/convertFromRawToDraftState.js"],"names":["_extends","target","i","arguments","length","source","key","Object","prototype","hasOwnProperty","call","ContentBlock","require","ContentState","DraftEntity","createCharacterList","decodeEntityRanges","decodeInlineStyleRanges","generateRandomKey","convertFromRawToDraftState","rawState","blocks","entityMap","fromStorageToLocal","forEach","storageKey","encodedEntity","type","mutability","data","newKey","create","contentBlocks","map","block","text","depth","inlineStyleRanges","entityRanges","inlineStyles","filteredEntityRanges","filter","range","entities","characterList","createFromBlockArray","module","exports"],"mappings":"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","file":"convertFromRawToDraftState.js","sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule convertFromRawToDraftState\n * \n */\n\n'use strict';\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar ContentBlock = require('./ContentBlock');\nvar ContentState = require('./ContentState');\nvar DraftEntity = require('./DraftEntity');\n\nvar createCharacterList = require('./createCharacterList');\nvar decodeEntityRanges = require('./decodeEntityRanges');\nvar decodeInlineStyleRanges = require('./decodeInlineStyleRanges');\nvar generateRandomKey = require('./generateRandomKey');\n\nfunction convertFromRawToDraftState(rawState) {\n  var blocks = rawState.blocks;\n  var entityMap = rawState.entityMap;\n\n  var fromStorageToLocal = {};\n  Object.keys(entityMap).forEach(function (storageKey) {\n    var encodedEntity = entityMap[storageKey];\n    var type = encodedEntity.type;\n    var mutability = encodedEntity.mutability;\n    var data = encodedEntity.data;\n\n    var newKey = DraftEntity.create(type, mutability, data || {});\n    fromStorageToLocal[storageKey] = newKey;\n  });\n\n  var contentBlocks = blocks.map(function (block) {\n    var key = block.key;\n    var type = block.type;\n    var text = block.text;\n    var depth = block.depth;\n    var inlineStyleRanges = block.inlineStyleRanges;\n    var entityRanges = block.entityRanges;\n\n    key = key || generateRandomKey();\n    depth = depth || 0;\n    inlineStyleRanges = inlineStyleRanges || [];\n    entityRanges = entityRanges || [];\n\n    var inlineStyles = decodeInlineStyleRanges(text, inlineStyleRanges);\n\n    // Translate entity range keys to the DraftEntity map.\n    var filteredEntityRanges = entityRanges.filter(function (range) {\n      return fromStorageToLocal.hasOwnProperty(range.key);\n    }).map(function (range) {\n      return _extends({}, range, { key: fromStorageToLocal[range.key] });\n    });\n\n    var entities = decodeEntityRanges(text, filteredEntityRanges);\n    var characterList = createCharacterList(inlineStyles, entities);\n\n    return new ContentBlock({ key: key, type: type, text: text, depth: depth, characterList: characterList });\n  });\n\n  return ContentState.createFromBlockArray(contentBlocks);\n}\n\nmodule.exports = convertFromRawToDraftState;"]}