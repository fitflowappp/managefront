{"version":3,"sources":["../../../src/components/draft/setDraftEditorSelection.js"],"names":["containsNode","require","getActiveElement","setDraftEditorSelection","selectionState","node","blockKey","nodeStart","nodeEnd","document","documentElement","selection","global","getSelection","anchorKey","getAnchorKey","anchorOffset","getAnchorOffset","focusKey","getFocusKey","focusOffset","getFocusOffset","isBackward","getIsBackward","extend","tempKey","tempOffset","hasAnchor","hasFocus","removeAllRanges","addPointToSelection","addFocusToSelection","storedFocusNode","focusNode","storedFocusOffset","offset","range","getRangeAt","setEnd","addRange","cloneRange","createRange","setStart","module","exports"],"mappings":"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","file":"setDraftEditorSelection.js","sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule setDraftEditorSelection\n * @typechecks\n * \n */\n\n/**\n * In modern non-IE browsers, we can support both forward and backward\n * selections.\n *\n * Note: IE10+ supports the Selection object, but it does not support\n * the `extend` method, which means that even in modern IE, it's not possible\n * to programatically create a backward selection. Thus, for all IE\n * versions, we use the old IE API to create our selections.\n */\n'use strict';\n\nvar containsNode = require('fbjs/lib/containsNode');\nvar getActiveElement = require('fbjs/lib/getActiveElement');\n\nfunction setDraftEditorSelection(selectionState, node, blockKey, nodeStart, nodeEnd) {\n  // It's possible that the editor has been removed from the DOM but\n  // our selection code doesn't know it yet. Forcing selection in\n  // this case may lead to errors, so just bail now.\n  if (!containsNode(document.documentElement, node)) {\n    return;\n  }\n\n  var selection = global.getSelection();\n  var anchorKey = selectionState.getAnchorKey();\n  var anchorOffset = selectionState.getAnchorOffset();\n  var focusKey = selectionState.getFocusKey();\n  var focusOffset = selectionState.getFocusOffset();\n  var isBackward = selectionState.getIsBackward();\n\n  // IE doesn't support backward selection. Swap key/offset pairs.\n  if (!selection.extend && isBackward) {\n    var tempKey = anchorKey;\n    var tempOffset = anchorOffset;\n    anchorKey = focusKey;\n    anchorOffset = focusOffset;\n    focusKey = tempKey;\n    focusOffset = tempOffset;\n    isBackward = false;\n  }\n\n  var hasAnchor = anchorKey === blockKey && nodeStart <= anchorOffset && nodeEnd >= anchorOffset;\n\n  var hasFocus = focusKey === blockKey && nodeStart <= focusOffset && nodeEnd >= focusOffset;\n\n  // If the selection is entirely bound within this node, set the selection\n  // and be done.\n  if (hasAnchor && hasFocus) {\n    selection.removeAllRanges();\n    addPointToSelection(selection, node, anchorOffset - nodeStart);\n    addFocusToSelection(selection, node, focusOffset - nodeStart);\n    return;\n  }\n\n  if (!isBackward) {\n    // If the anchor is within this node, set the range start.\n    if (hasAnchor) {\n      selection.removeAllRanges();\n      addPointToSelection(selection, node, anchorOffset - nodeStart);\n    }\n\n    // If the focus is within this node, we can assume that we have\n    // already set the appropriate start range on the selection, and\n    // can simply extend the selection.\n    if (hasFocus) {\n      addFocusToSelection(selection, node, focusOffset - nodeStart);\n    }\n  } else {\n    // If this node has the focus, set the selection range to be a\n    // collapsed range beginning here. Later, when we encounter the anchor,\n    // we'll use this information to extend the selection.\n    if (hasFocus) {\n      selection.removeAllRanges();\n      addPointToSelection(selection, node, focusOffset - nodeStart);\n    }\n\n    // If this node has the anchor, we may assume that the correct\n    // focus information is already stored on the selection object.\n    // We keep track of it, reset the selection range, and extend it\n    // back to the focus point.\n    if (hasAnchor) {\n      var storedFocusNode = selection.focusNode;\n      var storedFocusOffset = selection.focusOffset;\n\n      selection.removeAllRanges();\n      addPointToSelection(selection, node, anchorOffset - nodeStart);\n      addFocusToSelection(selection, storedFocusNode, storedFocusOffset);\n    }\n  }\n}\n\n/**\n * Extend selection towards focus point.\n */\nfunction addFocusToSelection(selection, node, offset) {\n  if (selection.extend && containsNode(getActiveElement(), node)) {\n    // If `extend` is called while another element has focus, an error is\n    // thrown. We therefore disable `extend` if the active element is somewhere\n    // other than the node we are selecting. This should only occur in Firefox,\n    // since it is the only browser to support multiple selections.\n    // See https://bugzilla.mozilla.org/show_bug.cgi?id=921444.\n    selection.extend(node, offset);\n  } else {\n    // IE doesn't support extend. This will mean no backward selection.\n    // Extract the existing selection range and add focus to it.\n    // Additionally, clone the selection range. IE11 throws an\n    // InvalidStateError when attempting to access selection properties\n    // after the range is detached.\n    var range = selection.getRangeAt(0);\n    range.setEnd(node, offset);\n    selection.addRange(range.cloneRange());\n  }\n}\n\nfunction addPointToSelection(selection, node, offset) {\n  var range = document.createRange();\n  range.setStart(node, offset);\n  selection.addRange(range);\n}\n\nmodule.exports = setDraftEditorSelection;"]}