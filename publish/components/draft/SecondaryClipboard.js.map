{"version":3,"sources":["../../../src/components/draft/SecondaryClipboard.js"],"names":["DraftModifier","require","EditorState","getContentStateFragment","nullthrows","clipboard","SecondaryClipboard","cut","editorState","content","getCurrentContent","selection","getSelection","targetRange","isCollapsed","anchorKey","getAnchorKey","blockEnd","getBlockForKey","getLength","getAnchorOffset","set","afterRemoval","removeRange","push","paste","newContent","replaceWithFragment","module","exports"],"mappings":"AAAA;;;;;;;;;;;;AAYA;;AAEA,IAAIA,gBAAgBC,QAAQ,iBAAR,CAApB;AACA,IAAIC,cAAcD,QAAQ,eAAR,CAAlB;;AAEA,IAAIE,0BAA0BF,QAAQ,2BAAR,CAA9B;AACA,IAAIG,aAAaH,QAAQ,qBAAR,CAAjB;;AAEA,IAAII,YAAY,IAAhB;;AAEA;;;;AAIA,IAAIC,qBAAqB;AACvBC,OAAK,SAASA,GAAT,CAAaC,WAAb,EAA0B;AAC7B,QAAIC,UAAUD,YAAYE,iBAAZ,EAAd;AACA,QAAIC,YAAYH,YAAYI,YAAZ,EAAhB;AACA,QAAIC,cAAc,IAAlB;;AAEA,QAAIF,UAAUG,WAAV,EAAJ,EAA6B;AAC3B,UAAIC,YAAYJ,UAAUK,YAAV,EAAhB;AACA,UAAIC,WAAWR,QAAQS,cAAR,CAAuBH,SAAvB,EAAkCI,SAAlC,EAAf;;AAEA,UAAIF,aAAaN,UAAUS,eAAV,EAAjB,EAA8C;AAC5C,eAAOZ,WAAP;AACD;;AAEDK,oBAAcF,UAAUU,GAAV,CAAc,aAAd,EAA6BJ,QAA7B,CAAd;AACD,KATD,MASO;AACLJ,oBAAcF,SAAd;AACD;;AAEDE,kBAAcT,WAAWS,WAAX,CAAd;AACAR,gBAAYF,wBAAwBM,OAAxB,EAAiCI,WAAjC,CAAZ;;AAEA,QAAIS,eAAetB,cAAcuB,WAAd,CAA0Bd,OAA1B,EAAmCI,WAAnC,EAAgD,SAAhD,CAAnB;;AAEA,QAAIS,iBAAiBb,OAArB,EAA8B;AAC5B,aAAOD,WAAP;AACD;;AAED,WAAON,YAAYsB,IAAZ,CAAiBhB,WAAjB,EAA8Bc,YAA9B,EAA4C,cAA5C,CAAP;AACD,GA7BsB;;AA+BvBG,SAAO,SAASA,KAAT,CAAejB,WAAf,EAA4B;AACjC,QAAI,CAACH,SAAL,EAAgB;AACd,aAAOG,WAAP;AACD;;AAED,QAAIkB,aAAa1B,cAAc2B,mBAAd,CAAkCnB,YAAYE,iBAAZ,EAAlC,EAAmEF,YAAYI,YAAZ,EAAnE,EAA+FP,SAA/F,CAAjB;;AAEA,WAAOH,YAAYsB,IAAZ,CAAiBhB,WAAjB,EAA8BkB,UAA9B,EAA0C,iBAA1C,CAAP;AACD;AAvCsB,CAAzB;;AA0CAE,OAAOC,OAAP,GAAiBvB,kBAAjB","file":"SecondaryClipboard.js","sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule SecondaryClipboard\n * \n */\n\n'use strict';\n\nvar DraftModifier = require('./DraftModifier');\nvar EditorState = require('./EditorState');\n\nvar getContentStateFragment = require('./getContentStateFragment');\nvar nullthrows = require('fbjs/lib/nullthrows');\n\nvar clipboard = null;\n\n/**\n * Some systems offer a \"secondary\" clipboard to allow quick internal cut\n * and paste behavior. For instance, Ctrl+K (cut) and Ctrl+Y (paste).\n */\nvar SecondaryClipboard = {\n  cut: function cut(editorState) {\n    var content = editorState.getCurrentContent();\n    var selection = editorState.getSelection();\n    var targetRange = null;\n\n    if (selection.isCollapsed()) {\n      var anchorKey = selection.getAnchorKey();\n      var blockEnd = content.getBlockForKey(anchorKey).getLength();\n\n      if (blockEnd === selection.getAnchorOffset()) {\n        return editorState;\n      }\n\n      targetRange = selection.set('focusOffset', blockEnd);\n    } else {\n      targetRange = selection;\n    }\n\n    targetRange = nullthrows(targetRange);\n    clipboard = getContentStateFragment(content, targetRange);\n\n    var afterRemoval = DraftModifier.removeRange(content, targetRange, 'forward');\n\n    if (afterRemoval === content) {\n      return editorState;\n    }\n\n    return EditorState.push(editorState, afterRemoval, 'remove-range');\n  },\n\n  paste: function paste(editorState) {\n    if (!clipboard) {\n      return editorState;\n    }\n\n    var newContent = DraftModifier.replaceWithFragment(editorState.getCurrentContent(), editorState.getSelection(), clipboard);\n\n    return EditorState.push(editorState, newContent, 'insert-fragment');\n  }\n};\n\nmodule.exports = SecondaryClipboard;"]}