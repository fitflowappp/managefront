{"version":3,"sources":["../../../src/components/draft/getRangeClientRects.js"],"names":["UserAgent","require","invariant","isChrome","isBrowser","getRangeClientRectsChrome","range","tempRange","cloneRange","clientRects","ancestor","endContainer","parentNode","atCommonAncestor","commonAncestorContainer","setStart","startContainer","startOffset","rects","getClientRects","push","_ref","reverse","concat","apply","setEndBefore","process","env","NODE_ENV","undefined","getRangeClientRects","module","exports"],"mappings":"AAAA;;;;;;;;;;;;;AAaA;;;;;;;;AAEA,IAAIA,YAAYC,QAAQ,oBAAR,CAAhB;;AAEA,IAAIC,YAAYD,QAAQ,oBAAR,CAAhB;;AAEA,IAAIE,WAAWH,UAAUI,SAAV,CAAoB,QAApB,CAAf;;AAEA;AACA;AACA;AACA;AACA;AACA,SAASC,yBAAT,CAAmCC,KAAnC,EAA0C;AACxC,MAAIC,YAAYD,MAAME,UAAN,EAAhB;AACA,MAAIC,cAAc,EAAlB;;AAEA,OAAK,IAAIC,WAAWJ,MAAMK,YAA1B,EAAwCD,YAAY,IAApD,EAA0DA,WAAWA,SAASE,UAA9E,EAA0F;AACxF;AACA;AACA,QAAIC,mBAAmBH,aAAaJ,MAAMQ,uBAA1C;AACA,QAAID,gBAAJ,EAAsB;AACpBN,gBAAUQ,QAAV,CAAmBT,MAAMU,cAAzB,EAAyCV,MAAMW,WAA/C;AACD,KAFD,MAEO;AACLV,gBAAUQ,QAAV,CAAmBR,UAAUI,YAA7B,EAA2C,CAA3C;AACD;AACD,QAAIO,QAAQ,oBAAWX,UAAUY,cAAV,EAAX,CAAZ;AACAV,gBAAYW,IAAZ,CAAiBF,KAAjB;AACA,QAAIL,gBAAJ,EAAsB;AACpB,UAAIQ,IAAJ;;AAEAZ,kBAAYa,OAAZ;AACA,aAAO,CAACD,OAAO,EAAR,EAAYE,MAAZ,CAAmBC,KAAnB,CAAyBH,IAAzB,EAA+BZ,WAA/B,CAAP;AACD;AACDF,cAAUkB,YAAV,CAAuBf,QAAvB;AACD;;AAED,GAAC,KAAD,GAASgB,QAAQC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwC1B,UAAU,KAAV,EAAiB,uEAAjB,CAAxC,GAAoIA,UAAU,KAAV,CAA7I,GAAgK2B,SAAhK;AACD;;AAED;;;AAGA,IAAIC,sBAAsB3B,WAAWE,yBAAX,GAAuC,UAAUC,KAAV,EAAiB;AAChF,SAAO,oBAAWA,MAAMa,cAAN,EAAX,CAAP;AACD,CAFD;;AAIAY,OAAOC,OAAP,GAAiBF,mBAAjB","file":"getRangeClientRects.js","sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule getRangeClientRects\n * @typechecks\n * \n */\n\n'use strict';\n\nvar UserAgent = require('fbjs/lib/UserAgent');\n\nvar invariant = require('fbjs/lib/invariant');\n\nvar isChrome = UserAgent.isBrowser('Chrome');\n\n// In Chrome, the client rects will include the entire bounds of all nodes that\n// begin (have a start tag) within the selection, even if the selection does\n// not overlap the entire node. To resolve this, we split the range at each\n// start tag and join the client rects together.\n// https://code.google.com/p/chromium/issues/detail?id=324437\nfunction getRangeClientRectsChrome(range) {\n  var tempRange = range.cloneRange();\n  var clientRects = [];\n\n  for (var ancestor = range.endContainer; ancestor != null; ancestor = ancestor.parentNode) {\n    // If we've climbed up to the common ancestor, we can now use the\n    // original start point and stop climbing the tree.\n    var atCommonAncestor = ancestor === range.commonAncestorContainer;\n    if (atCommonAncestor) {\n      tempRange.setStart(range.startContainer, range.startOffset);\n    } else {\n      tempRange.setStart(tempRange.endContainer, 0);\n    }\n    var rects = Array.from(tempRange.getClientRects());\n    clientRects.push(rects);\n    if (atCommonAncestor) {\n      var _ref;\n\n      clientRects.reverse();\n      return (_ref = []).concat.apply(_ref, clientRects);\n    }\n    tempRange.setEndBefore(ancestor);\n  }\n\n  !false ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Found an unexpected detached subtree when getting range client rects.') : invariant(false) : undefined;\n}\n\n/**\n * Like range.getClientRects() but normalizes for browser bugs.\n */\nvar getRangeClientRects = isChrome ? getRangeClientRectsChrome : function (range) {\n  return Array.from(range.getClientRects());\n};\n\nmodule.exports = getRangeClientRects;"]}