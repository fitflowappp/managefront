{"version":3,"sources":["../../../src/components/draft/DraftEntitySegments.js"],"names":["DraftEntitySegments","getRemovalRange","selectionStart","selectionEnd","text","entityStart","direction","segments","split","map","segment","ii","length","segmentStart","segmentEnd","removalStart","removalEnd","jj","entityEnd","atStart","atEnd","start","end","module","exports"],"mappings":"AAAA;;;;;;;;;;;;;AAaA;;;;;;;;;;;;;;;;;;;;;;;AAuBA;;AAEA,IAAIA,sBAAsB;AACxBC,mBAAiB,SAASA,eAAT,CAAyBC,cAAzB,EAAyCC,YAAzC,EAAuDC,IAAvD,EAA6DC,WAA7D,EAA0EC,SAA1E,EAAqF;AACpG,QAAIC,WAAWH,KAAKI,KAAL,CAAW,GAAX,CAAf;AACAD,eAAWA,SAASE,GAAT,CAAa,WAAW,UAAUC,OAArB,EAA8B,UAAUC,EAAxC,EAA4C;AAClE,UAAIL,cAAc,SAAlB,EAA6B;AAC3B,YAAIK,KAAK,CAAT,EAAY;AACV,iBAAO,MAAMD,OAAb;AACD;AACF,OAJD,MAIO,IAAIC,KAAKJ,SAASK,MAAT,GAAkB,CAA3B,EAA8B;AACnC,eAAOF,UAAU,GAAjB;AACD;AACD,aAAOA,OAAP;AACD,KATU,CAAX;;AAWA,QAAIG,eAAeR,WAAnB;AACA,QAAIS,UAAJ;AACA,QAAIJ,OAAJ;AACA,QAAIK,eAAe,IAAnB;AACA,QAAIC,aAAa,IAAjB;;AAEA,SAAK,IAAIC,KAAK,CAAd,EAAiBA,KAAKV,SAASK,MAA/B,EAAuCK,IAAvC,EAA6C;AAC3CP,gBAAUH,SAASU,EAAT,CAAV;AACAH,mBAAaD,eAAeH,QAAQE,MAApC;;AAEA;AACA,UAAIV,iBAAiBY,UAAjB,IAA+BD,eAAeV,YAAlD,EAAgE;AAC9D,YAAIY,iBAAiB,IAArB,EAA2B;AACzBC,uBAAaF,UAAb;AACD,SAFD,MAEO;AACLC,yBAAeF,YAAf;AACAG,uBAAaF,UAAb;AACD;AACF,OAPD,MAOO,IAAIC,iBAAiB,IAArB,EAA2B;AAChC;AACD;;AAEDF,qBAAeC,UAAf;AACD;;AAED,QAAII,YAAYb,cAAcD,KAAKQ,MAAnC;AACA,QAAIO,UAAUJ,iBAAiBV,WAA/B;AACA,QAAIe,QAAQJ,eAAeE,SAA3B;;AAEA,QAAI,CAACC,OAAD,IAAYC,KAAZ,IAAqBD,WAAW,CAACC,KAArC,EAA4C;AAC1C,UAAId,cAAc,SAAlB,EAA6B;AAC3B,YAAIU,eAAeE,SAAnB,EAA8B;AAC5BF;AACD;AACF,OAJD,MAIO,IAAID,iBAAiBV,WAArB,EAAkC;AACvCU;AACD;AACF;;AAED,WAAO;AACLM,aAAON,YADF;AAELO,WAAKN;AAFA,KAAP;AAID;AAzDuB,CAA1B;;AA4DAO,OAAOC,OAAP,GAAiBxB,mBAAjB","file":"DraftEntitySegments.js","sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule DraftEntitySegments\n * @typechecks\n * \n */\n\n/**\n * Identify the range to delete from a segmented entity.\n *\n * Rules:\n *\n *  Example: 'John F. Kennedy'\n *\n *   - Deletion from within any non-whitespace (i.e. ['John', 'F.', 'Kennedy'])\n *     will return the range of that text.\n *\n *       'John F. Kennedy' -> 'John F.'\n *                  ^\n *\n *   - Forward deletion of whitespace will remove the following section:\n *\n *       'John F. Kennedy' -> 'John Kennedy'\n *            ^\n *\n *   - Backward deletion of whitespace will remove the previous section:\n *\n *       'John F. Kennedy' -> 'F. Kennedy'\n *            ^\n */\n'use strict';\n\nvar DraftEntitySegments = {\n  getRemovalRange: function getRemovalRange(selectionStart, selectionEnd, text, entityStart, direction) {\n    var segments = text.split(' ');\n    segments = segments.map(function ( /*string*/segment, /*number*/ii) {\n      if (direction === 'forward') {\n        if (ii > 0) {\n          return ' ' + segment;\n        }\n      } else if (ii < segments.length - 1) {\n        return segment + ' ';\n      }\n      return segment;\n    });\n\n    var segmentStart = entityStart;\n    var segmentEnd;\n    var segment;\n    var removalStart = null;\n    var removalEnd = null;\n\n    for (var jj = 0; jj < segments.length; jj++) {\n      segment = segments[jj];\n      segmentEnd = segmentStart + segment.length;\n\n      // Our selection overlaps this segment.\n      if (selectionStart < segmentEnd && segmentStart < selectionEnd) {\n        if (removalStart !== null) {\n          removalEnd = segmentEnd;\n        } else {\n          removalStart = segmentStart;\n          removalEnd = segmentEnd;\n        }\n      } else if (removalStart !== null) {\n        break;\n      }\n\n      segmentStart = segmentEnd;\n    }\n\n    var entityEnd = entityStart + text.length;\n    var atStart = removalStart === entityStart;\n    var atEnd = removalEnd === entityEnd;\n\n    if (!atStart && atEnd || atStart && !atEnd) {\n      if (direction === 'forward') {\n        if (removalEnd !== entityEnd) {\n          removalEnd++;\n        }\n      } else if (removalStart !== entityStart) {\n        removalStart--;\n      }\n    }\n\n    return {\n      start: removalStart,\n      end: removalEnd\n    };\n  }\n};\n\nmodule.exports = DraftEntitySegments;"]}