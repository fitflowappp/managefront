{"version":3,"sources":["../../../src/components/draft/decodeEntityRanges.js"],"names":["UnicodeUtils","require","substr","decodeEntityRanges","text","ranges","entities","Array","length","fill","forEach","range","start","offset","end","ii","key","module","exports"],"mappings":"AAAA;;;;;;;;;;;;;AAaA;;AAEA,IAAIA,eAAeC,QAAQ,uBAAR,CAAnB;;AAEA,IAAIC,SAASF,aAAaE,MAA1B;;AAEA;;;AAGA,SAASC,kBAAT,CAA4BC,IAA5B,EAAkCC,MAAlC,EAA0C;AACxC,MAAIC,WAAWC,MAAMH,KAAKI,MAAX,EAAmBC,IAAnB,CAAwB,IAAxB,CAAf;AACA,MAAIJ,MAAJ,EAAY;AACVA,WAAOK,OAAP,CAAe,UAAUC,KAAV,EAAiB;AAC9B;AACA;AACA,UAAIC,QAAQV,OAAOE,IAAP,EAAa,CAAb,EAAgBO,MAAME,MAAtB,EAA8BL,MAA1C;AACA,UAAIM,MAAMF,QAAQV,OAAOE,IAAP,EAAaO,MAAME,MAAnB,EAA2BF,MAAMH,MAAjC,EAAyCA,MAA3D;AACA,WAAK,IAAIO,KAAKH,KAAd,EAAqBG,KAAKD,GAA1B,EAA+BC,IAA/B,EAAqC;AACnCT,iBAASS,EAAT,IAAeJ,MAAMK,GAArB;AACD;AACF,KARD;AASD;AACD,SAAOV,QAAP;AACD;;AAEDW,OAAOC,OAAP,GAAiBf,kBAAjB","file":"decodeEntityRanges.js","sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule decodeEntityRanges\n * @typechecks\n * \n */\n\n'use strict';\n\nvar UnicodeUtils = require('fbjs/lib/UnicodeUtils');\n\nvar substr = UnicodeUtils.substr;\n\n/**\n * Convert to native JavaScript string lengths to determine ranges.\n */\nfunction decodeEntityRanges(text, ranges) {\n  var entities = Array(text.length).fill(null);\n  if (ranges) {\n    ranges.forEach(function (range) {\n      // Using Unicode-enabled substrings converted to JavaScript lengths,\n      // fill the output array with entity keys.\n      var start = substr(text, 0, range.offset).length;\n      var end = start + substr(text, range.offset, range.length).length;\n      for (var ii = start; ii < end; ii++) {\n        entities[ii] = range.key;\n      }\n    });\n  }\n  return entities;\n}\n\nmodule.exports = decodeEntityRanges;"]}