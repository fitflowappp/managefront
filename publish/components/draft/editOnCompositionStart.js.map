{"version":3,"sources":["../../../src/components/draft/editOnCompositionStart.js"],"names":["EditorState","require","editOnCompositionStart","setRenderGuard","setMode","update","set","props","editorState","inCompositionMode","module","exports"],"mappings":"AAAA;;;;;;;;;;;;AAYA;;AAEA,IAAIA,cAAcC,QAAQ,eAAR,CAAlB;;AAEA;;;;AAIA,SAASC,sBAAT,GAAkC;AAChC,OAAKC,cAAL;AACA,OAAKC,OAAL,CAAa,WAAb;AACA,OAAKC,MAAL,CAAYL,YAAYM,GAAZ,CAAgB,KAAKC,KAAL,CAAWC,WAA3B,EAAwC,EAAEC,mBAAmB,IAArB,EAAxC,CAAZ;AACD;;AAEDC,OAAOC,OAAP,GAAiBT,sBAAjB","file":"editOnCompositionStart.js","sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule editOnCompositionStart\n * \n */\n\n'use strict';\n\nvar EditorState = require('./EditorState');\n\n/**\n * The user has begun using an IME input system. Switching to `composite` mode\n * allows handling composition input and disables other edit behavior.\n */\nfunction editOnCompositionStart() {\n  this.setRenderGuard();\n  this.setMode('composite');\n  this.update(EditorState.set(this.props.editorState, { inCompositionMode: true }));\n}\n\nmodule.exports = editOnCompositionStart;"]}