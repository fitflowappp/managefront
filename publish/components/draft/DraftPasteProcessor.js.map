{"version":3,"sources":["../../../src/components/draft/DraftPasteProcessor.js"],"names":["CharacterMetadata","require","ContentBlock","Immutable","convertFromHTMLtoContentBlocks","generateRandomKey","getSafeBodyFromHTML","sanitizeDraftText","List","Repeat","DraftPasteProcessor","processHTML","html","blockRenderMap","processText","textBlocks","character","map","textLine","key","type","text","characterList","length","module","exports"],"mappings":"AAAA;;;;;;;;;;;;;AAaA;;AAEA,IAAIA,oBAAoBC,QAAQ,qBAAR,CAAxB;AACA,IAAIC,eAAeD,QAAQ,gBAAR,CAAnB;AACA,IAAIE,YAAYF,QAAQ,WAAR,CAAhB;;AAEA,IAAIG,iCAAiCH,QAAQ,kCAAR,CAArC;AACA,IAAII,oBAAoBJ,QAAQ,qBAAR,CAAxB;AACA,IAAIK,sBAAsBL,QAAQ,uBAAR,CAA1B;AACA,IAAIM,oBAAoBN,QAAQ,qBAAR,CAAxB;;AAEA,IAAIO,OAAOL,UAAUK,IAArB;AACA,IAAIC,SAASN,UAAUM,MAAvB;;AAEA,IAAIC,sBAAsB;AACxBC,eAAa,SAASA,WAAT,CAAqBC,IAArB,EAA2BC,cAA3B,EAA2C;AACtD,WAAOT,+BAA+BQ,IAA/B,EAAqCN,mBAArC,EAA0DO,cAA1D,CAAP;AACD,GAHuB;;AAKxBC,eAAa,SAASA,WAAT,CAAqBC,UAArB,EAAiCC,SAAjC,EAA4C;AACvD,WAAOD,WAAWE,GAAX,CAAe,UAAUC,QAAV,EAAoB;AACxCA,iBAAWX,kBAAkBW,QAAlB,CAAX;AACA,aAAO,IAAIhB,YAAJ,CAAiB;AACtBiB,aAAKd,mBADiB;AAEtBe,cAAM,UAFgB;AAGtBC,cAAMH,QAHgB;AAItBI,uBAAed,KAAKC,OAAOO,SAAP,EAAkBE,SAASK,MAA3B,CAAL;AAJO,OAAjB,CAAP;AAMD,KARM,CAAP;AASD;AAfuB,CAA1B;;AAkBAC,OAAOC,OAAP,GAAiBf,mBAAjB","file":"DraftPasteProcessor.js","sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule DraftPasteProcessor\n * @typechecks\n * \n */\n\n'use strict';\n\nvar CharacterMetadata = require('./CharacterMetadata');\nvar ContentBlock = require('./ContentBlock');\nvar Immutable = require('immutable');\n\nvar convertFromHTMLtoContentBlocks = require('./convertFromHTMLToContentBlocks');\nvar generateRandomKey = require('./generateRandomKey');\nvar getSafeBodyFromHTML = require('./getSafeBodyFromHTML');\nvar sanitizeDraftText = require('./sanitizeDraftText');\n\nvar List = Immutable.List;\nvar Repeat = Immutable.Repeat;\n\nvar DraftPasteProcessor = {\n  processHTML: function processHTML(html, blockRenderMap) {\n    return convertFromHTMLtoContentBlocks(html, getSafeBodyFromHTML, blockRenderMap);\n  },\n\n  processText: function processText(textBlocks, character) {\n    return textBlocks.map(function (textLine) {\n      textLine = sanitizeDraftText(textLine);\n      return new ContentBlock({\n        key: generateRandomKey(),\n        type: 'unstyled',\n        text: textLine,\n        characterList: List(Repeat(character, textLine.length))\n      });\n    });\n  }\n};\n\nmodule.exports = DraftPasteProcessor;"]}