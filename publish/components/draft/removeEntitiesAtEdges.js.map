{"version":3,"sources":["../../../src/components/draft/removeEntitiesAtEdges.js"],"names":["CharacterMetadata","require","DraftEntity","findRangesImmutable","invariant","removeEntitiesAtEdges","contentState","selectionState","blockMap","getBlockMap","updatedBlocks","startKey","getStartKey","startOffset","getStartOffset","startBlock","get","updatedStart","removeForBlock","endKey","getEndKey","endOffset","getEndOffset","endBlock","updatedEnd","length","set","merge","selectionAfter","getRemovalRange","characters","key","offset","removalRange","a","b","getEntity","element","start","end","process","env","NODE_ENV","undefined","block","chars","getCharacterList","charBefore","charAfter","count","entityBeforeCursor","entityAfterCursor","entity","getMutability","_getRemovalRange","current","applyEntity","module","exports"],"mappings":"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","file":"removeEntitiesAtEdges.js","sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule removeEntitiesAtEdges\n * \n */\n\n'use strict';\n\nvar CharacterMetadata = require('./CharacterMetadata');\nvar DraftEntity = require('./DraftEntity');\n\nvar findRangesImmutable = require('./findRangesImmutable');\nvar invariant = require('fbjs/lib/invariant');\n\nfunction removeEntitiesAtEdges(contentState, selectionState) {\n  var blockMap = contentState.getBlockMap();\n\n  var updatedBlocks = {};\n\n  var startKey = selectionState.getStartKey();\n  var startOffset = selectionState.getStartOffset();\n  var startBlock = blockMap.get(startKey);\n  var updatedStart = removeForBlock(startBlock, startOffset);\n\n  if (updatedStart !== startBlock) {\n    updatedBlocks[startKey] = updatedStart;\n  }\n\n  var endKey = selectionState.getEndKey();\n  var endOffset = selectionState.getEndOffset();\n  var endBlock = blockMap.get(endKey);\n  if (startKey === endKey) {\n    endBlock = updatedStart;\n  }\n\n  var updatedEnd = removeForBlock(endBlock, endOffset);\n\n  if (updatedEnd !== endBlock) {\n    updatedBlocks[endKey] = updatedEnd;\n  }\n\n  if (!Object.keys(updatedBlocks).length) {\n    return contentState.set('selectionAfter', selectionState);\n  }\n\n  return contentState.merge({\n    blockMap: blockMap.merge(updatedBlocks),\n    selectionAfter: selectionState\n  });\n}\n\nfunction getRemovalRange(characters, key, offset) {\n  var removalRange;\n  findRangesImmutable(characters, function (a, b) {\n    return a.getEntity() === b.getEntity();\n  }, function (element) {\n    return element.getEntity() === key;\n  }, function (start, end) {\n    if (start <= offset && end >= offset) {\n      removalRange = { start: start, end: end };\n    }\n  });\n  !(typeof removalRange === 'object') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Removal range must exist within character list.') : invariant(false) : undefined;\n  return removalRange;\n}\n\nfunction removeForBlock(block, offset) {\n  var chars = block.getCharacterList();\n  var charBefore = offset > 0 ? chars.get(offset - 1) : undefined;\n  var charAfter = offset < chars.count() ? chars.get(offset) : undefined;\n  var entityBeforeCursor = charBefore ? charBefore.getEntity() : undefined;\n  var entityAfterCursor = charAfter ? charAfter.getEntity() : undefined;\n\n  if (entityAfterCursor && entityAfterCursor === entityBeforeCursor) {\n    var entity = DraftEntity.get(entityAfterCursor);\n    if (entity.getMutability() !== 'MUTABLE') {\n      var _getRemovalRange = getRemovalRange(chars, entityAfterCursor, offset);\n\n      var start = _getRemovalRange.start;\n      var end = _getRemovalRange.end;\n\n      var current;\n      while (start < end) {\n        current = chars.get(start);\n        chars = chars.set(start, CharacterMetadata.applyEntity(current, null));\n        start++;\n      }\n      return block.set('characterList', chars);\n    }\n  }\n\n  return block;\n}\n\nmodule.exports = removeEntitiesAtEdges;"]}