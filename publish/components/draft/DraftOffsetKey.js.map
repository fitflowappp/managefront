{"version":3,"sources":["../../../src/components/draft/DraftOffsetKey.js"],"names":["_slicedToArray","sliceIterator","arr","i","_arr","_n","_d","_e","undefined","_i","_s","next","done","push","value","length","err","Array","isArray","Object","TypeError","KEY_DELIMITER","DraftOffsetKey","encode","blockKey","decoratorKey","leafKey","decode","offsetKey","_offsetKey$split","split","_offsetKey$split2","parseInt","module","exports"],"mappings":"AAAA;;;;;;;;;;;;AAYA;;;;;;;;;;;;AAEA,IAAIA,iBAAkB,YAAY;AAAE,WAASC,aAAT,CAAuBC,GAAvB,EAA4BC,CAA5B,EAA+B;AAAE,QAAIC,OAAO,EAAX,CAAe,IAAIC,KAAK,IAAT,CAAe,IAAIC,KAAK,KAAT,CAAgB,IAAIC,KAAKC,SAAT,CAAoB,IAAI;AAAE,WAAK,IAAIC,gCAAKP,GAAL,CAAJ,EAAiCQ,EAAtC,EAA0C,EAAEL,KAAK,CAACK,KAAKD,GAAGE,IAAH,EAAN,EAAiBC,IAAxB,CAA1C,EAAyEP,KAAK,IAA9E,EAAoF;AAAED,aAAKS,IAAL,CAAUH,GAAGI,KAAb,EAAqB,IAAIX,KAAKC,KAAKW,MAAL,KAAgBZ,CAAzB,EAA4B;AAAQ;AAAE,KAAvJ,CAAwJ,OAAOa,GAAP,EAAY;AAAEV,WAAK,IAAL,CAAWC,KAAKS,GAAL;AAAW,KAA5L,SAAqM;AAAE,UAAI;AAAE,YAAI,CAACX,EAAD,IAAOI,GAAG,QAAH,CAAX,EAAyBA,GAAG,QAAH;AAAiB,OAAhD,SAAyD;AAAE,YAAIH,EAAJ,EAAQ,MAAMC,EAAN;AAAW;AAAE,KAAC,OAAOH,IAAP;AAAc,GAAC,OAAO,UAAUF,GAAV,EAAeC,CAAf,EAAkB;AAAE,QAAIc,MAAMC,OAAN,CAAchB,GAAd,CAAJ,EAAwB;AAAE,aAAOA,GAAP;AAAa,KAAvC,MAA6C,8BAAuBiB,OAAOjB,GAAP,CAAvB,GAAoC;AAAE,aAAOD,cAAcC,GAAd,EAAmBC,CAAnB,CAAP;AAA+B,KAArE,MAA2E;AAAE,YAAM,IAAIiB,SAAJ,CAAc,sDAAd,CAAN;AAA8E;AAAE,GAArO;AAAwO,CAAjoB,EAArB;;AAEA,IAAIC,gBAAgB,GAApB;;AAEA,IAAIC,iBAAiB;AACnBC,UAAQ,SAASA,MAAT,CAAgBC,QAAhB,EAA0BC,YAA1B,EAAwCC,OAAxC,EAAiD;AACvD,WAAOF,WAAWH,aAAX,GAA2BI,YAA3B,GAA0CJ,aAA1C,GAA0DK,OAAjE;AACD,GAHkB;;AAKnBC,UAAQ,SAASA,MAAT,CAAgBC,SAAhB,EAA2B;AACjC,QAAIC,mBAAmBD,UAAUE,KAAV,CAAgBT,aAAhB,CAAvB;;AAEA,QAAIU,oBAAoB/B,eAAe6B,gBAAf,EAAiC,CAAjC,CAAxB;;AAEA,QAAIL,WAAWO,kBAAkB,CAAlB,CAAf;AACA,QAAIN,eAAeM,kBAAkB,CAAlB,CAAnB;AACA,QAAIL,UAAUK,kBAAkB,CAAlB,CAAd;;AAEA,WAAO;AACLP,gBAAUA,QADL;AAELC,oBAAcO,SAASP,YAAT,EAAuB,EAAvB,CAFT;AAGLC,eAASM,SAASN,OAAT,EAAkB,EAAlB;AAHJ,KAAP;AAKD;AAnBkB,CAArB;;AAsBAO,OAAOC,OAAP,GAAiBZ,cAAjB","file":"DraftOffsetKey.js","sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule DraftOffsetKey\n * \n */\n\n'use strict';\n\nvar _slicedToArray = (function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i['return']) _i['return'](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError('Invalid attempt to destructure non-iterable instance'); } }; })();\n\nvar KEY_DELIMITER = '-';\n\nvar DraftOffsetKey = {\n  encode: function encode(blockKey, decoratorKey, leafKey) {\n    return blockKey + KEY_DELIMITER + decoratorKey + KEY_DELIMITER + leafKey;\n  },\n\n  decode: function decode(offsetKey) {\n    var _offsetKey$split = offsetKey.split(KEY_DELIMITER);\n\n    var _offsetKey$split2 = _slicedToArray(_offsetKey$split, 3);\n\n    var blockKey = _offsetKey$split2[0];\n    var decoratorKey = _offsetKey$split2[1];\n    var leafKey = _offsetKey$split2[2];\n\n    return {\n      blockKey: blockKey,\n      decoratorKey: parseInt(decoratorKey, 10),\n      leafKey: parseInt(leafKey, 10)\n    };\n  }\n};\n\nmodule.exports = DraftOffsetKey;"]}