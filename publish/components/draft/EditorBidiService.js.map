{"version":3,"sources":["../../../src/components/draft/EditorBidiService.js"],"names":["Immutable","require","UnicodeBidiService","nullthrows","OrderedMap","bidiService","EditorBidiService","getDirectionMap","content","prevBidiMap","reset","blockMap","getBlockMap","nextBidi","valueSeq","map","block","getDirection","getText","bidiMap","keySeq","zip","is","module","exports"],"mappings":"AAAA;;;;;;;;;;;;;AAaA;;AAEA,IAAIA,YAAYC,QAAQ,WAAR,CAAhB;AACA,IAAIC,qBAAqBD,QAAQ,6BAAR,CAAzB;;AAEA,IAAIE,aAAaF,QAAQ,qBAAR,CAAjB;;AAEA,IAAIG,aAAaJ,UAAUI,UAA3B;;AAEA,IAAIC,WAAJ;;AAEA,IAAIC,oBAAoB;AACtBC,mBAAiB,SAASA,eAAT,CAAyBC,OAAzB,EAAkCC,WAAlC,EAA+C;AAC9D,QAAI,CAACJ,WAAL,EAAkB;AAChBA,oBAAc,IAAIH,kBAAJ,EAAd;AACD,KAFD,MAEO;AACLG,kBAAYK,KAAZ;AACD;;AAED,QAAIC,WAAWH,QAAQI,WAAR,EAAf;AACA,QAAIC,WAAWF,SAASG,QAAT,GAAoBC,GAApB,CAAwB,UAAUC,KAAV,EAAiB;AACtD,aAAOb,WAAWE,WAAX,EAAwBY,YAAxB,CAAqCD,MAAME,OAAN,EAArC,CAAP;AACD,KAFc,CAAf;AAGA,QAAIC,UAAUf,WAAWO,SAASS,MAAT,GAAkBC,GAAlB,CAAsBR,QAAtB,CAAX,CAAd;;AAEA,QAAIJ,eAAe,IAAf,IAAuBT,UAAUsB,EAAV,CAAab,WAAb,EAA0BU,OAA1B,CAA3B,EAA+D;AAC7D,aAAOV,WAAP;AACD;;AAED,WAAOU,OAAP;AACD;AAnBqB,CAAxB;;AAsBAI,OAAOC,OAAP,GAAiBlB,iBAAjB","file":"EditorBidiService.js","sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule EditorBidiService\n * @typechecks\n * \n */\n\n'use strict';\n\nvar Immutable = require('immutable');\nvar UnicodeBidiService = require('fbjs/lib/UnicodeBidiService');\n\nvar nullthrows = require('fbjs/lib/nullthrows');\n\nvar OrderedMap = Immutable.OrderedMap;\n\nvar bidiService;\n\nvar EditorBidiService = {\n  getDirectionMap: function getDirectionMap(content, prevBidiMap) {\n    if (!bidiService) {\n      bidiService = new UnicodeBidiService();\n    } else {\n      bidiService.reset();\n    }\n\n    var blockMap = content.getBlockMap();\n    var nextBidi = blockMap.valueSeq().map(function (block) {\n      return nullthrows(bidiService).getDirection(block.getText());\n    });\n    var bidiMap = OrderedMap(blockMap.keySeq().zip(nextBidi));\n\n    if (prevBidiMap != null && Immutable.is(prevBidiMap, bidiMap)) {\n      return prevBidiMap;\n    }\n\n    return bidiMap;\n  }\n};\n\nmodule.exports = EditorBidiService;"]}