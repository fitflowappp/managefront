{"version":3,"sources":["../../../src/components/draft/editOnBlur.js"],"names":["EditorState","require","UserAgent","getActiveElement","isWebKit","isEngine","editOnBlur","e","document","body","global","getSelection","removeAllRanges","editorState","props","currentSelection","getHasFocus","selection","set","onBlur","update","acceptSelection","module","exports"],"mappings":"AAAA;;;;;;;;;;;;AAYA;;AAEA,IAAIA,cAAcC,QAAQ,eAAR,CAAlB;AACA,IAAIC,YAAYD,QAAQ,oBAAR,CAAhB;;AAEA,IAAIE,mBAAmBF,QAAQ,2BAAR,CAAvB;;AAEA,IAAIG,WAAWF,UAAUG,QAAV,CAAmB,QAAnB,CAAf;;AAEA,SAASC,UAAT,CAAoBC,CAApB,EAAuB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,MAAIH,YAAYD,uBAAuBK,SAASC,IAAhD,EAAsD;AACpDC,WAAOC,YAAP,GAAsBC,eAAtB;AACD;;AAED,MAAIC,cAAc,KAAKC,KAAL,CAAWD,WAA7B;AACA,MAAIE,mBAAmBF,YAAYF,YAAZ,EAAvB;AACA,MAAI,CAACI,iBAAiBC,WAAjB,EAAL,EAAqC;AACnC;AACD;;AAED,MAAIC,YAAYF,iBAAiBG,GAAjB,CAAqB,UAArB,EAAiC,KAAjC,CAAhB;AACA,OAAKJ,KAAL,CAAWK,MAAX,IAAqB,KAAKL,KAAL,CAAWK,MAAX,CAAkBZ,CAAlB,CAArB;AACA,OAAKa,MAAL,CAAYpB,YAAYqB,eAAZ,CAA4BR,WAA5B,EAAyCI,SAAzC,CAAZ;AACD;;AAEDK,OAAOC,OAAP,GAAiBjB,UAAjB","file":"editOnBlur.js","sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule editOnBlur\n * \n */\n\n'use strict';\n\nvar EditorState = require('./EditorState');\nvar UserAgent = require('fbjs/lib/UserAgent');\n\nvar getActiveElement = require('fbjs/lib/getActiveElement');\n\nvar isWebKit = UserAgent.isEngine('WebKit');\n\nfunction editOnBlur(e) {\n  // Webkit has a bug in which blurring a contenteditable by clicking on\n  // other active elements will trigger the `blur` event but will not remove\n  // the DOM selection from the contenteditable. We therefore force the\n  // issue to be certain, checking whether the active element is `body`\n  // to force it when blurring occurs within the window (as opposed to\n  // clicking to another tab or window).\n  if (isWebKit && getActiveElement() === document.body) {\n    global.getSelection().removeAllRanges();\n  }\n\n  var editorState = this.props.editorState;\n  var currentSelection = editorState.getSelection();\n  if (!currentSelection.getHasFocus()) {\n    return;\n  }\n\n  var selection = currentSelection.set('hasFocus', false);\n  this.props.onBlur && this.props.onBlur(e);\n  this.update(EditorState.acceptSelection(editorState, selection));\n}\n\nmodule.exports = editOnBlur;"]}