{"version":3,"sources":["../../../src/components/draft/editOnSelect.js"],"names":["EditorState","require","ReactDOM","getDraftEditorSelection","editOnSelect","_blockSelectEvents","editorState","props","documentSelection","findDOMNode","refs","editorContainer","firstChild","updatedSelectionState","selectionState","getSelection","needsRecovery","forceSelection","acceptSelection","update","module","exports"],"mappings":"AAAA;;;;;;;;;;;;AAYA;;AAEA,IAAIA,cAAcC,QAAQ,eAAR,CAAlB;AACA,IAAIC,WAAWD,QAAQ,WAAR,CAAf;;AAEA,IAAIE,0BAA0BF,QAAQ,2BAAR,CAA9B;;AAEA,SAASG,YAAT,GAAwB;AACtB,MAAI,KAAKC,kBAAT,EAA6B;AAC3B;AACD;;AAED,MAAIC,cAAc,KAAKC,KAAL,CAAWD,WAA7B;AACA,MAAIE,oBAAoBL,wBAAwBG,WAAxB,EAAqCJ,SAASO,WAAT,CAAqB,KAAKC,IAAL,CAAUC,eAA/B,EAAgDC,UAArF,CAAxB;AACA,MAAIC,wBAAwBL,kBAAkBM,cAA9C;;AAEA,MAAID,0BAA0BP,YAAYS,YAAZ,EAA9B,EAA0D;AACxD,QAAIP,kBAAkBQ,aAAtB,EAAqC;AACnCV,oBAAcN,YAAYiB,cAAZ,CAA2BX,WAA3B,EAAwCO,qBAAxC,CAAd;AACD,KAFD,MAEO;AACLP,oBAAcN,YAAYkB,eAAZ,CAA4BZ,WAA5B,EAAyCO,qBAAzC,CAAd;AACD;AACD,SAAKM,MAAL,CAAYb,WAAZ;AACD;AACF;;AAEDc,OAAOC,OAAP,GAAiBjB,YAAjB","file":"editOnSelect.js","sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule editOnSelect\n * \n */\n\n'use strict';\n\nvar EditorState = require('./EditorState');\nvar ReactDOM = require('react-dom');\n\nvar getDraftEditorSelection = require('./getDraftEditorSelection');\n\nfunction editOnSelect() {\n  if (this._blockSelectEvents) {\n    return;\n  }\n\n  var editorState = this.props.editorState;\n  var documentSelection = getDraftEditorSelection(editorState, ReactDOM.findDOMNode(this.refs.editorContainer).firstChild);\n  var updatedSelectionState = documentSelection.selectionState;\n\n  if (updatedSelectionState !== editorState.getSelection()) {\n    if (documentSelection.needsRecovery) {\n      editorState = EditorState.forceSelection(editorState, updatedSelectionState);\n    } else {\n      editorState = EditorState.acceptSelection(editorState, updatedSelectionState);\n    }\n    this.update(editorState);\n  }\n}\n\nmodule.exports = editOnSelect;"]}