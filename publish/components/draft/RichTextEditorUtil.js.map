{"version":3,"sources":["../../../src/components/draft/RichTextEditorUtil.js"],"names":["DraftEntity","require","DraftModifier","EditorState","SelectionState","adjustBlockDepthForContentState","nullthrows","RichTextEditorUtil","currentBlockContainsLink","editorState","selection","getSelection","getCurrentContent","getBlockForKey","getAnchorKey","getCharacterList","slice","getStartOffset","getEndOffset","some","v","entity","getEntity","get","getType","getCurrentBlockType","getStartKey","getDataObjectForLinkURL","uri","url","toString","handleKeyCommand","command","toggleInlineStyle","toggleCode","onBackspace","onDelete","insertSoftNewline","contentState","insertText","getCurrentInlineStyle","newEditorState","push","forceSelection","getSelectionAfter","isCollapsed","getAnchorOffset","getFocusOffset","content","startKey","blockBefore","getBlockBefore","atomicBlockTarget","merge","anchorKey","getKey","anchorOffset","asCurrentStyle","setBlockType","withoutAtomicBlock","removeRange","withoutBlockStyle","tryToRemoveBlockStyle","block","length","getLength","blockAfter","getBlockAfter","focusKey","focusOffset","onTab","event","maxDepth","key","getFocusKey","type","preventDefault","blockAbove","typeAbove","depth","getDepth","shiftKey","Math","min","withAdjustment","toggleBlockType","blockType","endKey","getEndKey","target","isBackward","hasAtomicBlock","getBlockMap","skipWhile","_","k","takeWhile","typeToSet","inlineStyle","currentStyle","setInlineStyleOverride","has","remove","add","newContent","removeInlineStyle","applyInlineStyle","toggleLink","targetSelection","entityKey","withoutLink","applyEntity","offset","module","exports"],"mappings":"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","file":"RichTextEditorUtil.js","sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule RichTextEditorUtil\n * @typechecks\n * \n */\n\n'use strict';\n\nvar DraftEntity = require('./DraftEntity');\nvar DraftModifier = require('./DraftModifier');\nvar EditorState = require('./EditorState');\nvar SelectionState = require('./SelectionState');\n\nvar adjustBlockDepthForContentState = require('./adjustBlockDepthForContentState');\nvar nullthrows = require('fbjs/lib/nullthrows');\n\nvar RichTextEditorUtil = {\n  currentBlockContainsLink: function currentBlockContainsLink(editorState) {\n    var selection = editorState.getSelection();\n    return editorState.getCurrentContent().getBlockForKey(selection.getAnchorKey()).getCharacterList().slice(selection.getStartOffset(), selection.getEndOffset()).some(function (v) {\n      var entity = v.getEntity();\n      return !!entity && DraftEntity.get(entity).getType() === 'LINK';\n    });\n  },\n\n  getCurrentBlockType: function getCurrentBlockType(editorState) {\n    var selection = editorState.getSelection();\n    return editorState.getCurrentContent().getBlockForKey(selection.getStartKey()).getType();\n  },\n\n  getDataObjectForLinkURL: function getDataObjectForLinkURL(uri) {\n    return { url: uri.toString() };\n  },\n\n  handleKeyCommand: function handleKeyCommand(editorState, command) {\n    switch (command) {\n      case 'bold':\n        return RichTextEditorUtil.toggleInlineStyle(editorState, 'BOLD');\n      case 'italic':\n        return RichTextEditorUtil.toggleInlineStyle(editorState, 'ITALIC');\n      case 'underline':\n        return RichTextEditorUtil.toggleInlineStyle(editorState, 'UNDERLINE');\n      case 'code':\n        return RichTextEditorUtil.toggleCode(editorState);\n      case 'backspace':\n      case 'backspace-word':\n      case 'backspace-to-start-of-line':\n        return RichTextEditorUtil.onBackspace(editorState);\n      case 'delete':\n      case 'delete-word':\n      case 'delete-to-end-of-block':\n        return RichTextEditorUtil.onDelete(editorState);\n      default:\n        return null;\n    }\n  },\n\n  insertSoftNewline: function insertSoftNewline(editorState) {\n    var contentState = DraftModifier.insertText(editorState.getCurrentContent(), editorState.getSelection(), '\\n', editorState.getCurrentInlineStyle(), null);\n\n    var newEditorState = EditorState.push(editorState, contentState, 'insert-characters');\n\n    return EditorState.forceSelection(newEditorState, contentState.getSelectionAfter());\n  },\n\n  /**\n   * For collapsed selections at the start of styled blocks, backspace should\n   * just remove the existing style.\n   */\n  onBackspace: function onBackspace(editorState) {\n    var selection = editorState.getSelection();\n    if (!selection.isCollapsed() || selection.getAnchorOffset() || selection.getFocusOffset()) {\n      return null;\n    }\n\n    // First, try to remove a preceding atomic block.\n    var content = editorState.getCurrentContent();\n    var startKey = selection.getStartKey();\n    var blockBefore = content.getBlockBefore(startKey);\n\n    if (blockBefore && blockBefore.getType() === 'atomic') {\n      var atomicBlockTarget = selection.merge({\n        anchorKey: blockBefore.getKey(),\n        anchorOffset: 0\n      });\n      var asCurrentStyle = DraftModifier.setBlockType(content, atomicBlockTarget, content.getBlockForKey(startKey).getType());\n      var withoutAtomicBlock = DraftModifier.removeRange(asCurrentStyle, atomicBlockTarget, 'backward');\n      if (withoutAtomicBlock !== content) {\n        return EditorState.push(editorState, withoutAtomicBlock, 'remove-range');\n      }\n    }\n\n    // If that doesn't succeed, try to remove the current block style.\n    var withoutBlockStyle = RichTextEditorUtil.tryToRemoveBlockStyle(editorState);\n\n    if (withoutBlockStyle) {\n      return EditorState.push(editorState, withoutBlockStyle, 'change-block-type');\n    }\n\n    return null;\n  },\n\n  onDelete: function onDelete(editorState) {\n    var selection = editorState.getSelection();\n    if (!selection.isCollapsed()) {\n      return null;\n    }\n\n    var content = editorState.getCurrentContent();\n    var startKey = selection.getStartKey();\n    var block = content.getBlockForKey(startKey);\n    var length = block.getLength();\n\n    // The cursor is somewhere within the text. Behave normally.\n    if (selection.getStartOffset() < length) {\n      return null;\n    }\n\n    var blockAfter = content.getBlockAfter(startKey);\n\n    if (!blockAfter || blockAfter.getType() !== 'atomic') {\n      return null;\n    }\n\n    var atomicBlockTarget = selection.merge({\n      focusKey: blockAfter.getKey(),\n      focusOffset: blockAfter.getLength()\n    });\n\n    var withoutAtomicBlock = DraftModifier.removeRange(content, atomicBlockTarget, 'forward');\n\n    if (withoutAtomicBlock !== content) {\n      return EditorState.push(editorState, withoutAtomicBlock, 'remove-range');\n    }\n\n    return null;\n  },\n\n  onTab: function onTab(event, editorState, maxDepth) {\n    var selection = editorState.getSelection();\n    var key = selection.getAnchorKey();\n    if (key !== selection.getFocusKey()) {\n      return editorState;\n    }\n\n    var content = editorState.getCurrentContent();\n    var block = content.getBlockForKey(key);\n    var type = block.getType();\n    if (type !== 'unordered-list-item' && type !== 'ordered-list-item') {\n      return editorState;\n    }\n\n    event.preventDefault();\n\n    // Only allow indenting one level beyond the block above, and only if\n    // the block above is a list item as well.\n    var blockAbove = content.getBlockBefore(key);\n    if (!blockAbove) {\n      return editorState;\n    }\n\n    var typeAbove = blockAbove.getType();\n    if (typeAbove !== 'unordered-list-item' && typeAbove !== 'ordered-list-item') {\n      return editorState;\n    }\n\n    var depth = block.getDepth();\n    if (!event.shiftKey && depth === maxDepth) {\n      return editorState;\n    }\n\n    maxDepth = Math.min(blockAbove.getDepth() + 1, maxDepth);\n\n    var withAdjustment = adjustBlockDepthForContentState(content, selection, event.shiftKey ? -1 : 1, maxDepth);\n\n    return EditorState.push(editorState, withAdjustment, 'adjust-depth');\n  },\n\n  toggleBlockType: function toggleBlockType(editorState, blockType) {\n    var selection = editorState.getSelection();\n    var startKey = selection.getStartKey();\n    var endKey = selection.getEndKey();\n    var content = editorState.getCurrentContent();\n    var target = selection;\n\n    // Triple-click can lead to a selection that includes offset 0 of the\n    // following block. The `SelectionState` for this case is accurate, but\n    // we should avoid toggling block type for the trailing block because it\n    // is a confusing interaction.\n    if (startKey !== endKey && selection.getEndOffset() === 0) {\n      var blockBefore = nullthrows(content.getBlockBefore(endKey));\n      endKey = blockBefore.getKey();\n      target = target.merge({\n        anchorKey: startKey,\n        anchorOffset: selection.getStartOffset(),\n        focusKey: endKey,\n        focusOffset: blockBefore.getLength(),\n        isBackward: false\n      });\n    }\n\n    var hasAtomicBlock = content.getBlockMap().skipWhile(function (_, k) {\n      return k !== startKey;\n    }).takeWhile(function (_, k) {\n      return k !== endKey;\n    }).some(function (v) {\n      return v.getType() === 'atomic';\n    });\n\n    if (hasAtomicBlock) {\n      return editorState;\n    }\n\n    var typeToSet = content.getBlockForKey(startKey).getType() === blockType ? 'unstyled' : blockType;\n\n    return EditorState.push(editorState, DraftModifier.setBlockType(content, target, typeToSet), 'change-block-type');\n  },\n\n  toggleCode: function toggleCode(editorState) {\n    var selection = editorState.getSelection();\n    var anchorKey = selection.getAnchorKey();\n    var focusKey = selection.getFocusKey();\n\n    if (selection.isCollapsed() || anchorKey !== focusKey) {\n      return RichTextEditorUtil.toggleBlockType(editorState, 'code-block');\n    }\n\n    return RichTextEditorUtil.toggleInlineStyle(editorState, 'CODE');\n  },\n\n  /**\n   * Toggle the specified inline style for the selection. If the\n   * user's selection is collapsed, apply or remove the style for the\n   * internal state. If it is not collapsed, apply the change directly\n   * to the document state.\n   */\n  toggleInlineStyle: function toggleInlineStyle(editorState, inlineStyle) {\n    var selection = editorState.getSelection();\n    var currentStyle = editorState.getCurrentInlineStyle();\n\n    // If the selection is collapsed, toggle the specified style on or off and\n    // set the result as the new inline style override. This will then be\n    // used as the inline style for the next character to be inserted.\n    if (selection.isCollapsed()) {\n      return EditorState.setInlineStyleOverride(editorState, currentStyle.has(inlineStyle) ? currentStyle.remove(inlineStyle) : currentStyle.add(inlineStyle));\n    }\n\n    // If characters are selected, immediately apply or remove the\n    // inline style on the document state itself.\n    var content = editorState.getCurrentContent();\n    var newContent;\n\n    // If the style is already present for the selection range, remove it.\n    // Otherwise, apply it.\n    if (currentStyle.has(inlineStyle)) {\n      newContent = DraftModifier.removeInlineStyle(content, selection, inlineStyle);\n    } else {\n      newContent = DraftModifier.applyInlineStyle(content, selection, inlineStyle);\n    }\n\n    return EditorState.push(editorState, newContent, 'change-inline-style');\n  },\n\n  toggleLink: function toggleLink(editorState, targetSelection, entityKey) {\n    var withoutLink = DraftModifier.applyEntity(editorState.getCurrentContent(), targetSelection, entityKey);\n\n    return EditorState.push(editorState, withoutLink, 'apply-entity');\n  },\n\n  /**\n   * When a collapsed cursor is at the start of an empty styled block, allow\n   * certain key commands (newline, backspace) to simply change the\n   * style of the block instead of the default behavior.\n   */\n  tryToRemoveBlockStyle: function tryToRemoveBlockStyle(editorState) {\n    var selection = editorState.getSelection();\n    var offset = selection.getAnchorOffset();\n    if (selection.isCollapsed() && offset === 0) {\n      var key = selection.getAnchorKey();\n      var content = editorState.getCurrentContent();\n      var block = content.getBlockForKey(key);\n      if (block.getLength() > 0) {\n        return null;\n      }\n\n      var type = block.getType();\n      var blockBefore = content.getBlockBefore(key);\n      if (type === 'code-block' && blockBefore && blockBefore.getType() === 'code-block') {\n        return null;\n      }\n\n      if (type !== 'unstyled') {\n        return DraftModifier.setBlockType(content, selection, 'unstyled');\n      }\n    }\n    return null;\n  }\n};\n\nmodule.exports = RichTextEditorUtil;"]}