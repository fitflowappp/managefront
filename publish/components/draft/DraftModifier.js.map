{"version":3,"sources":["../../../src/components/draft/DraftModifier.js"],"names":["CharacterMetadata","require","ContentStateInlineStyle","_require","OrderedSet","applyEntityToContentState","getCharacterRemovalRange","getContentStateFragment","insertFragmentIntoContentState","insertTextIntoContentState","invariant","removeEntitiesAtEdges","removeRangeFromContentState","setBlockTypeForContentState","splitBlockInContentState","DraftModifier","replaceText","contentState","rangeToReplace","text","inlineStyle","entityKey","withoutEntities","withoutText","character","create","style","entity","getSelectionAfter","insertText","targetRange","isCollapsed","process","env","NODE_ENV","undefined","moveText","removalRange","movedFragment","afterRemoval","removeRange","replaceWithFragment","fragment","rangeToRemove","removalDirection","getAnchorKey","getFocusKey","key","startOffset","getStartOffset","endOffset","getEndOffset","block","getBlockForKey","startEntity","getEntityAt","endEntity","adjustedRemovalRange","splitBlock","selectionState","applyInlineStyle","add","removeInlineStyle","remove","setBlockType","blockType","applyEntity","module","exports"],"mappings":"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","file":"DraftModifier.js","sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule DraftModifier\n * @typechecks\n * \n */\n\n/**\n * `DraftModifier` provides a set of convenience methods that apply\n * modifications to a `ContentState` object based on a target `SelectionState`.\n *\n * Any change to a `ContentState` should be decomposable into a series of\n * transaction functions that apply the required changes and return output\n * `ContentState` objects.\n *\n * These functions encapsulate some of the most common transaction sequences.\n */\n'use strict';\n\nvar CharacterMetadata = require('./CharacterMetadata');\nvar ContentStateInlineStyle = require('./ContentStateInlineStyle');\n\nvar _require = require('immutable');\n\nvar OrderedSet = _require.OrderedSet;\n\nvar applyEntityToContentState = require('./applyEntityToContentState');\nvar getCharacterRemovalRange = require('./getCharacterRemovalRange');\nvar getContentStateFragment = require('./getContentStateFragment');\nvar insertFragmentIntoContentState = require('./insertFragmentIntoContentState');\nvar insertTextIntoContentState = require('./insertTextIntoContentState');\nvar invariant = require('fbjs/lib/invariant');\nvar removeEntitiesAtEdges = require('./removeEntitiesAtEdges');\nvar removeRangeFromContentState = require('./removeRangeFromContentState');\nvar setBlockTypeForContentState = require('./setBlockTypeForContentState');\nvar splitBlockInContentState = require('./splitBlockInContentState');\n\nvar DraftModifier = {\n  replaceText: function replaceText(contentState, rangeToReplace, text, inlineStyle, entityKey) {\n    var withoutEntities = removeEntitiesAtEdges(contentState, rangeToReplace);\n    var withoutText = removeRangeFromContentState(withoutEntities, rangeToReplace);\n\n    var character = CharacterMetadata.create({\n      style: inlineStyle || OrderedSet(),\n      entity: entityKey || null\n    });\n\n    return insertTextIntoContentState(withoutText, withoutText.getSelectionAfter(), text, character);\n  },\n\n  insertText: function insertText(contentState, targetRange, text, inlineStyle, entityKey) {\n    !targetRange.isCollapsed() ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Target range must be collapsed for `insertText`.') : invariant(false) : undefined;\n    return DraftModifier.replaceText(contentState, targetRange, text, inlineStyle, entityKey);\n  },\n\n  moveText: function moveText(contentState, removalRange, targetRange) {\n    var movedFragment = getContentStateFragment(contentState, removalRange);\n\n    var afterRemoval = DraftModifier.removeRange(contentState, removalRange, 'backward');\n\n    return DraftModifier.replaceWithFragment(afterRemoval, targetRange, movedFragment);\n  },\n\n  replaceWithFragment: function replaceWithFragment(contentState, targetRange, fragment) {\n    var withoutEntities = removeEntitiesAtEdges(contentState, targetRange);\n    var withoutText = removeRangeFromContentState(withoutEntities, targetRange);\n\n    return insertFragmentIntoContentState(withoutText, withoutText.getSelectionAfter(), fragment);\n  },\n\n  removeRange: function removeRange(contentState, rangeToRemove, removalDirection) {\n    // Check whether the selection state overlaps with a single entity.\n    // If so, try to remove the appropriate substring of the entity text.\n    if (rangeToRemove.getAnchorKey() === rangeToRemove.getFocusKey()) {\n      var key = rangeToRemove.getAnchorKey();\n      var startOffset = rangeToRemove.getStartOffset();\n      var endOffset = rangeToRemove.getEndOffset();\n      var block = contentState.getBlockForKey(key);\n\n      var startEntity = block.getEntityAt(startOffset);\n      var endEntity = block.getEntityAt(endOffset - 1);\n      if (startEntity && startEntity === endEntity) {\n        var adjustedRemovalRange = getCharacterRemovalRange(block, rangeToRemove, removalDirection);\n        return removeRangeFromContentState(contentState, adjustedRemovalRange);\n      }\n    }\n\n    var withoutEntities = removeEntitiesAtEdges(contentState, rangeToRemove);\n    return removeRangeFromContentState(withoutEntities, rangeToRemove);\n  },\n\n  splitBlock: function splitBlock(contentState, selectionState) {\n    var withoutEntities = removeEntitiesAtEdges(contentState, selectionState);\n    var withoutText = removeRangeFromContentState(withoutEntities, selectionState);\n\n    return splitBlockInContentState(withoutText, withoutText.getSelectionAfter());\n  },\n\n  applyInlineStyle: function applyInlineStyle(contentState, selectionState, inlineStyle) {\n    return ContentStateInlineStyle.add(contentState, selectionState, inlineStyle);\n  },\n\n  removeInlineStyle: function removeInlineStyle(contentState, selectionState, inlineStyle) {\n    return ContentStateInlineStyle.remove(contentState, selectionState, inlineStyle);\n  },\n\n  setBlockType: function setBlockType(contentState, selectionState, blockType) {\n    return setBlockTypeForContentState(contentState, selectionState, blockType);\n  },\n\n  applyEntity: function applyEntity(contentState, selectionState, entityKey) {\n    var withoutEntities = removeEntitiesAtEdges(contentState, selectionState);\n    return applyEntityToContentState(withoutEntities, selectionState, entityKey);\n  }\n};\n\nmodule.exports = DraftModifier;"]}