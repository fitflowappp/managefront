{"version":3,"sources":["../../../src/components/draft/decodeInlineStyleRanges.js"],"names":["UnicodeUtils","require","_require","OrderedSet","substr","EMPTY_SET","decodeInlineStyleRanges","text","ranges","styles","Array","length","fill","forEach","range","cursor","offset","end","add","style","module","exports"],"mappings":"AAAA;;;;;;;;;;;;;AAaA;;AAEA,IAAIA,eAAeC,QAAQ,uBAAR,CAAnB;;AAEA,IAAIC,WAAWD,QAAQ,WAAR,CAAf;;AAEA,IAAIE,aAAaD,SAASC,UAA1B;AACA,IAAIC,SAASJ,aAAaI,MAA1B;;AAEA,IAAIC,YAAYF,YAAhB;;AAEA;;;AAGA,SAASG,uBAAT,CAAiCC,IAAjC,EAAuCC,MAAvC,EAA+C;AAC7C,MAAIC,SAASC,MAAMH,KAAKI,MAAX,EAAmBC,IAAnB,CAAwBP,SAAxB,CAAb;AACA,MAAIG,MAAJ,EAAY;AACVA,WAAOK,OAAP,CAAe,WAAW,UAAUC,KAArB,EAA4B;AACzC,UAAIC,SAASX,OAAOG,IAAP,EAAa,CAAb,EAAgBO,MAAME,MAAtB,EAA8BL,MAA3C;AACA,UAAIM,MAAMF,SAASX,OAAOG,IAAP,EAAaO,MAAME,MAAnB,EAA2BF,MAAMH,MAAjC,EAAyCA,MAA5D;AACA,aAAOI,SAASE,GAAhB,EAAqB;AACnBR,eAAOM,MAAP,IAAiBN,OAAOM,MAAP,EAAeG,GAAf,CAAmBJ,MAAMK,KAAzB,CAAjB;AACAJ;AACD;AACF,KAPD;AAQD;AACD,SAAON,MAAP;AACD;;AAEDW,OAAOC,OAAP,GAAiBf,uBAAjB","file":"decodeInlineStyleRanges.js","sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule decodeInlineStyleRanges\n * @typechecks\n * \n */\n\n'use strict';\n\nvar UnicodeUtils = require('fbjs/lib/UnicodeUtils');\n\nvar _require = require('immutable');\n\nvar OrderedSet = _require.OrderedSet;\nvar substr = UnicodeUtils.substr;\n\nvar EMPTY_SET = OrderedSet();\n\n/**\n * Convert to native JavaScript string lengths to determine ranges.\n */\nfunction decodeInlineStyleRanges(text, ranges) {\n  var styles = Array(text.length).fill(EMPTY_SET);\n  if (ranges) {\n    ranges.forEach(function ( /*object*/range) {\n      var cursor = substr(text, 0, range.offset).length;\n      var end = cursor + substr(text, range.offset, range.length).length;\n      while (cursor < end) {\n        styles[cursor] = styles[cursor].add(range.style);\n        cursor++;\n      }\n    });\n  }\n  return styles;\n}\n\nmodule.exports = decodeInlineStyleRanges;"]}