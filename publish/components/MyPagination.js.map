{"version":3,"sources":["../../src/components/MyPagination.js"],"names":["MyPagination","createClass","propTypes","location","PropTypes","any","isRequired","activePage","number","items","maxButtons","boundaryLinks","bool","ellipsis","oneOfType","node","first","last","prev","next","onSelect","func","buttonComponentClass","getDefaultProps","bsClass","renderPageButtons","pageButtons","startPage","endPage","hasHiddenPagesAfter","props","hiddenPagesBefore","parseInt","pagenumber","push","unshift","renderPrev","renderNext","renderFirst","renderLast","render","className"],"mappings":"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","file":"MyPagination.js","sourcesContent":["/**\r\n * Created by bruce on 16-6-18.\r\n */\r\nimport classNames from 'classnames';\r\nimport React from 'react';\r\nimport elementType from 'react-prop-types/lib/elementType';\r\n\r\nimport { bsClass, getClassSet } from 'react-bootstrap/lib/utils/bootstrapUtils';\r\n\r\nimport SafeAnchor from 'react-bootstrap/lib/SafeAnchor';\r\nimport PaginationButton from 'react-bootstrap/lib/PaginationButton';\r\n\r\nconst MyPagination = React.createClass({\r\n\r\n    propTypes: {\r\n        location:React.PropTypes.any.isRequired,\r\n        activePage: React.PropTypes.number,\r\n        items: React.PropTypes.number,\r\n        maxButtons: React.PropTypes.number,\r\n        /**\r\n         * When `true`, will display the first and the last button page\r\n         */\r\n        boundaryLinks: React.PropTypes.bool,\r\n        /**\r\n         * When `true`, will display the default node value ('&hellip;').\r\n         * Otherwise, will display provided node (when specified).\r\n         */\r\n        ellipsis: React.PropTypes.oneOfType([\r\n            React.PropTypes.bool,\r\n            React.PropTypes.node\r\n        ]),\r\n        /**\r\n         * When `true`, will display the default node value ('&laquo;').\r\n         * Otherwise, will display provided node (when specified).\r\n         */\r\n        first: React.PropTypes.oneOfType([\r\n            React.PropTypes.bool,\r\n            React.PropTypes.node\r\n        ]),\r\n        /**\r\n         * When `true`, will display the default node value ('&raquo;').\r\n         * Otherwise, will display provided node (when specified).\r\n         */\r\n        last: React.PropTypes.oneOfType([\r\n            React.PropTypes.bool,\r\n            React.PropTypes.node\r\n        ]),\r\n        /**\r\n         * When `true`, will display the default node value ('&lsaquo;').\r\n         * Otherwise, will display provided node (when specified).\r\n         */\r\n        prev: React.PropTypes.oneOfType([\r\n            React.PropTypes.bool,\r\n            React.PropTypes.node\r\n        ]),\r\n        /**\r\n         * When `true`, will display the default node value ('&rsaquo;').\r\n         * Otherwise, will display provided node (when specified).\r\n         */\r\n        next: React.PropTypes.oneOfType([\r\n            React.PropTypes.bool,\r\n            React.PropTypes.node\r\n        ]),\r\n        onSelect: React.PropTypes.func,\r\n        /**\r\n         * You can use a custom element for the buttons\r\n         */\r\n        buttonComponentClass: elementType\r\n    },\r\n\r\n    getDefaultProps() {\r\n        return {\r\n            activePage: 1,\r\n            items: 1,\r\n            maxButtons: 0,\r\n            first: false,\r\n            last: false,\r\n            prev: false,\r\n            next: false,\r\n            ellipsis: true,\r\n            boundaryLinks: false,\r\n            buttonComponentClass: SafeAnchor,\r\n            bsClass: 'pagination'\r\n        };\r\n    },\r\n\r\n    renderPageButtons() {\r\n        let pageButtons = [];\r\n        let startPage, endPage, hasHiddenPagesAfter;\r\n        let {\r\n            maxButtons,\r\n            activePage,\r\n            items,\r\n            onSelect,\r\n            ellipsis,\r\n            buttonComponentClass,\r\n            boundaryLinks,\r\n            location\r\n        } = this.props;\r\n\r\n        if (maxButtons) {\r\n            let hiddenPagesBefore = activePage - parseInt(maxButtons / 2, 10);\r\n            startPage = hiddenPagesBefore > 1 ? hiddenPagesBefore : 1;\r\n            hasHiddenPagesAfter = startPage + maxButtons <= items;\r\n\r\n            if (!hasHiddenPagesAfter) {\r\n                endPage = items;\r\n                startPage = items - maxButtons + 1;\r\n                if (startPage < 1) {\r\n                    startPage = 1;\r\n                }\r\n            } else {\r\n                endPage = startPage + maxButtons - 1;\r\n            }\r\n        } else {\r\n            startPage = 1;\r\n            endPage = items;\r\n        }\r\n\r\n        for (let pagenumber = startPage; pagenumber <= endPage; pagenumber++) {\r\n            pageButtons.push(\r\n                <PaginationButton\r\n                    key={pagenumber}\r\n                    eventKey={pagenumber}\r\n                    active={pagenumber === activePage}\r\n                    onSelect={onSelect}\r\n                    buttonComponentClass={buttonComponentClass}\r\n                    location={location}\r\n                >\r\n                    {pagenumber}\r\n                </PaginationButton>\r\n            );\r\n        }\r\n\r\n        if (boundaryLinks && ellipsis && startPage !== 1) {\r\n            pageButtons.unshift(\r\n                <PaginationButton\r\n                    key=\"ellipsisFirst\"\r\n                    disabled\r\n                    buttonComponentClass={buttonComponentClass}\r\n                    location={location}\r\n                >\r\n          <span aria-label=\"More\">\r\n            {this.props.ellipsis === true ? '\\u2026' : this.props.ellipsis}\r\n          </span>\r\n                </PaginationButton>\r\n            );\r\n\r\n            pageButtons.unshift(\r\n                <PaginationButton\r\n                    key={1}\r\n                    eventKey={1}\r\n                    active={false}\r\n                    onSelect={onSelect}\r\n                    buttonComponentClass={buttonComponentClass}\r\n                    location={location}\r\n                >\r\n                    1\r\n                </PaginationButton>\r\n            );\r\n        }\r\n\r\n        if (maxButtons && hasHiddenPagesAfter && ellipsis) {\r\n            pageButtons.push(\r\n                <PaginationButton\r\n                    key=\"ellipsis\"\r\n                    disabled\r\n                    buttonComponentClass={buttonComponentClass}\r\n                    location={location}\r\n                >\r\n          <span aria-label=\"More\">\r\n            {this.props.ellipsis === true ? '\\u2026' : this.props.ellipsis}\r\n          </span>\r\n                </PaginationButton>\r\n            );\r\n\r\n            if (boundaryLinks && endPage !== items) {\r\n                pageButtons.push(\r\n                    <PaginationButton\r\n                        key={items}\r\n                        eventKey={items}\r\n                        active={false}\r\n                        onSelect={onSelect}\r\n                        buttonComponentClass={buttonComponentClass}\r\n                        location={location}\r\n                    >\r\n                        {items}\r\n                    </PaginationButton>\r\n                );\r\n            }\r\n        }\r\n\r\n        return pageButtons;\r\n    },\r\n\r\n    renderPrev() {\r\n        if (!this.props.prev) {\r\n            return null;\r\n        }\r\n\r\n        return (\r\n            <PaginationButton\r\n                key=\"prev\"\r\n                eventKey={this.props.activePage - 1}\r\n                disabled={this.props.activePage === 1}\r\n                onSelect={this.props.onSelect}\r\n                buttonComponentClass={this.props.buttonComponentClass}\r\n                location={this.props.location}\r\n            >\r\n        <span aria-label=\"Previous\">\r\n          {this.props.prev === true ? '\\u2039' : this.props.prev}\r\n        </span>\r\n            </PaginationButton>\r\n        );\r\n    },\r\n\r\n    renderNext() {\r\n        if (!this.props.next) {\r\n            return null;\r\n        }\r\n\r\n        return (\r\n            <PaginationButton\r\n                key=\"next\"\r\n                eventKey={this.props.activePage + 1}\r\n                disabled={this.props.activePage >= this.props.items}\r\n                onSelect={this.props.onSelect}\r\n                buttonComponentClass={this.props.buttonComponentClass}\r\n                location={this.props.location}\r\n            >\r\n        <span aria-label=\"Next\">\r\n          {this.props.next === true ? '\\u203a' : this.props.next}\r\n        </span>\r\n            </PaginationButton>\r\n        );\r\n    },\r\n\r\n    renderFirst() {\r\n        if (!this.props.first) {\r\n            return null;\r\n        }\r\n\r\n        return (\r\n            <PaginationButton\r\n                key=\"first\"\r\n                eventKey={1}\r\n                disabled={this.props.activePage === 1 }\r\n                onSelect={this.props.onSelect}\r\n                buttonComponentClass={this.props.buttonComponentClass}\r\n                location={this.props.location}\r\n            >\r\n        <span aria-label=\"First\">\r\n          {this.props.first === true ? '\\u00ab' : this.props.first}\r\n        </span>\r\n            </PaginationButton>\r\n        );\r\n    },\r\n\r\n    renderLast() {\r\n        if (!this.props.last) {\r\n            return null;\r\n        }\r\n\r\n        return (\r\n            <PaginationButton\r\n                key=\"last\"\r\n                eventKey={this.props.items}\r\n                disabled={this.props.activePage >= this.props.items}\r\n                onSelect={this.props.onSelect}\r\n                buttonComponentClass={this.props.buttonComponentClass}\r\n                location={this.props.location}\r\n            >\r\n        <span aria-label=\"Last\">\r\n          {this.props.last === true ? '\\u00bb' : this.props.last}\r\n        </span>\r\n            </PaginationButton>\r\n        );\r\n    },\r\n\r\n    render() {\r\n        return (\r\n            <ul\r\n                {...this.props}\r\n                className={classNames(this.props.className, getClassSet(this.props))}\r\n            >\r\n                {this.renderFirst()}\r\n                {this.renderPrev()}\r\n                {this.renderPageButtons()}\r\n                {this.renderNext()}\r\n                {this.renderLast()}\r\n            </ul>\r\n        );\r\n    }\r\n});\r\n\r\nexport default bsClass('pagination', MyPagination);\r\n"]}