{"version":3,"sources":["../../src/containers/Networkinfo.js"],"names":["Networkinfo","props","state","editNetworkinfo","number","componentDidMount","query","queryNetworkinfo","add","setState","refs","getWrappedInstance","openModal","edit","networkinfo","handleSelect","render","networkinfos","list","bind","map","index","avatarUrl","name","openGId","gender","wechat","phone","industry","province","city","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","file":"Networkinfo.js","sourcesContent":["/**\r\n * Created by qwr on 2017/6/29.\r\n */\r\nimport React, {Component, PropTypes} from 'react'\r\nimport Helmet from \"react-helmet\"\r\nimport {bindActionCreators} from 'redux'\r\nimport {connect} from 'react-redux'\r\nimport {withRouter} from \"react-router\";\r\nimport {Button, Pagination, Panel} from \"react-bootstrap\"\r\nimport {networkinfoActions} from '../actions'\r\nimport NetworkinfoModal from '../components/modal/NetworkinfoModal';\r\nclass Networkinfo extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        //初始化要使用的state\r\n        this.state = {\r\n            editNetworkinfo:null,\r\n            number:0,\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        this.query();\r\n    }\r\n    query() {\r\n        const {queryNetworkinfo} = this.props;\r\n        queryNetworkinfo({});\r\n    }\r\n    add(){\r\n        this.setState({\r\n        editNetworkinfo:null,\r\n    })\r\n        this.refs['NetworkinfoModal'].getWrappedInstance().openModal();\r\n    }\r\n    edit(networkinfo){\r\n        this.setState({\r\n            editNetworkinfo:Object.assign({},networkinfo),\r\n        })\r\n        this.refs['NetworkinfoModal'].getWrappedInstance().openModal();\r\n    }\r\n    handleSelect(){\r\n\r\n    }\r\n    render(){\r\n        const networkinfos=this.props.networkinfo.list||[];\r\n        return (\r\n            <div>\r\n                <Helmet title=\"Networkinfo\"/>\r\n                <NetworkinfoModal query={this.query.bind(this)}  editNetworkinfo={this.state.editNetworkinfo} ref=\"NetworkinfoModal\"/>\r\n                <Panel className=\"m-t5\">\r\n                    <div>\r\n                        <Button bsStyle=\"primary\" className=\"glyphicon glyphicon-plus\" onClick={this.add.bind(this)}/>\r\n                    </div>\r\n                    <table className=\"table table-condensed table-hover\">\r\n                        <thead>\r\n                        <tr>\r\n                            <th>头像</th>\r\n                            <th>姓名</th>\r\n                            <th>群ID</th>\r\n                            <th>性别</th>\r\n                            <th>微信号</th>\r\n                            <th>电话</th>\r\n                            <th>行业</th>\r\n                            <th>城市</th>\r\n                            <th>操作</th>\r\n                        </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        {networkinfos.map((networkinfo, index) =>\r\n                        <tr key={index}>\r\n                            <td><img src={networkinfo.avatarUrl} alt=\"头像\" width={50}/></td>\r\n                            <td>{networkinfo.name}</td>\r\n                            <td>{networkinfo.openGId}</td>\r\n                            <td>{networkinfo.gender==1?'男':'女'}</td>\r\n                            <td>{networkinfo.wechat}</td>\r\n                            <td>{networkinfo.phone}</td>\r\n                            <td>{networkinfo.industry}</td>\r\n                            <td>{networkinfo.province+networkinfo.city}</td>\r\n                            <td>\r\n                                <Button bsStyle=\"info\" className='glyphicon glyphicon-pencil m-5' onClick={this.edit.bind(this,networkinfo)}/>\r\n                                {/*<Button bsStyle=\"danger\" className=\"glyphicon glyphicon-trash m-5\"/>*/}\r\n                            </td>\r\n                        </tr>\r\n                        )}\r\n                        </tbody>\r\n                    </table>\r\n                </Panel>\r\n                {/*<div className=\"pagination-wrap\">\r\n                    <Pagination\r\n                        prev\r\n                        next\r\n                        first\r\n                        last\r\n                        ellipsis\r\n                        boundaryLinks\r\n                        items={5}\r\n                        maxButtons={5}\r\n                        activePage={1}\r\n                        onSelect={this.handleSelect.bind(this)}\r\n                    />\r\n                </div>*/}\r\n            </div>\r\n        )\r\n    }\r\n}\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        networkinfo: state.networkinfo\r\n    }\r\n}\r\n//将action的所有方法绑定到props上\r\nfunction mapDispatchToProps(dispatch) {\r\n    return bindActionCreators(networkinfoActions, dispatch)\r\n}\r\n\r\n//通过react-redux提供的connect方法将我们需要的state中的数据和actions中的方法绑定到props上\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Networkinfo))"]}