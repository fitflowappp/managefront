{"version":3,"sources":["../../src/containers/UserDetails.js"],"names":["UserDetails","props","state","componentDidMount","condition","id","routeParams","query","getUsers","back","router","goBack","render","user","users","data","bind","facebookUid","email","headerImgContent","gender","crDate","unRegistered","facebookRegistrationSumbmittedDate","registerDate","userState","unlockedChallengeIds","join","currentChallengeId","completedChallengeNum","startedWorkoutIds","currentWorkoutId","duration","completedWorkoutNum","userConfiguration","notification","remider","schedulingDays","schedulingTime","shareCount","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","file":"UserDetails.js","sourcesContent":["/**\r\n * Created by qwr on 2017/10/11.\r\n */\r\nimport React, {Component, PropTypes} from 'react'\r\nimport Helmet from \"react-helmet\"\r\nimport {bindActionCreators} from 'redux'\r\nimport {connect} from 'react-redux'\r\nimport {Link, withRouter} from \"react-router\";\r\nimport {Col, Pagination} from \"react-bootstrap\"\r\nimport {upload} from '../common/fetch'\r\nimport {getTime} from '../common'\r\nimport {usersActions} from '../actions'\r\nimport Alert from '../components/Alert';\r\nclass UserDetails extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        var condition={\r\n            id:this.props.routeParams.id\r\n        }\r\n        this.query(condition);\r\n    }\r\n    query(condition) {\r\n        const {getUsers} = this.props;\r\n        getUsers(condition);\r\n    }\r\n\r\n    back(){\r\n        this.props.router.goBack();\r\n    }\r\n\r\n    render() {\r\n        const user = this.props.users.data||{};\r\n        return (\r\n            <div>\r\n                <Helmet title=\"UserDetails\"/>\r\n                <div className=\"box\">\r\n                    <div className=\"box-header\">\r\n                        <h3 className=\"box-title\">UserDetails</h3>\r\n                        <div className=\"box-tools\">\r\n                            <button type=\"button\"  className=\"btn  btn-primary m-5\" onClick={this.back.bind(this)}>back</button>\r\n                            <button type=\"button\" className=\"btn btn-success pull-right m-5\">\r\n                                <i className=\"fa fa-download\"></i>Export csv\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"box-body table-responsive\">\r\n                        <table className=\"table table-bordered table-hover\">\r\n                            <tbody>\r\n                            <tr>\r\n                                <td>User ID</td>\r\n                                <td>{user.user&&user.user.id}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Facebook ID</td>\r\n                                <td>{user.facebookUid}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Email Address</td>\r\n                                <td>{user.email}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Profile Picture</td>\r\n                                <td><img src={'data:image/gif;base64,'+user.headerImgContent} alt=\"none\" width={30}/></td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Gender</td>\r\n                                <td>{user.gender}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Facebook permissions</td>\r\n                                <td></td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Timestamp of App First Opened</td>\r\n                                <td>{getTime(user.user&&user.user.crDate)}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Registered?</td>\r\n                                <td>{user.user&&user.user.unRegistered?'no':'yes'}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Timestamp of Facebook Registration submitted</td>\r\n                                <td>{getTime(user.user&&user.user.facebookRegistrationSumbmittedDate)}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Timestamp of Registration Completed</td>\r\n                                <td>{getTime(user.user&&user.user.registerDate)}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Unlocked challenge IDs</td>\r\n                                <td>\r\n                                    {user.userState&&user.userState.unlockedChallengeIds&&user.userState.unlockedChallengeIds.join(',')}\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Current challenge ID</td>\r\n                                <td>{user.userState&&user.userState.currentChallengeId}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Number of completed challenges</td>\r\n                                <td>{user.userState&&user.userState.completedChallengeNum}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Started Workout IDs</td>\r\n                                <td>{user.userState&&user.userState.startedWorkoutIds}</td>\r\n                            </tr><tr>\r\n                                <td>Current Workout ID</td>\r\n                                <td>{user.userState&&user.userState.currentWorkoutId}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Cumulative duration of videos watched</td>\r\n                                <td>{user.userState&&user.userState.duration}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Number of completed Workouts</td>\r\n                                <td>{user.userState&&user.userState.completedWorkoutNum}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Scheduling in-app notification on?</td>\r\n                                <td>{user.userConfiguration&&user.userConfiguration.notification?'yes':'no'}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Scheduling calendar reminder on?</td>\r\n                                <td>{user.userConfiguration&&user.userConfiguration.remider?'yes':'no'}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Scheduling days</td>\r\n                                <td>\r\n                                    {user.userConfiguration&&user.userConfiguration.schedulingDays&&user.userConfiguration.schedulingDays.join(',')}\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Scheduling time of day</td>\r\n                                <td>{user.userConfiguration&&getTime(user.userConfiguration.schedulingTime)}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Cumulative number of social shares</td>\r\n                                <td>{user.shareCount}</td>\r\n                            </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        users: state.users\r\n    }\r\n}\r\n//将action的所有方法绑定到props上\r\nfunction mapDispatchToProps(dispatch) {\r\n    return bindActionCreators(usersActions, dispatch)\r\n}\r\n\r\n//通过react-redux提供的connect方法将我们需要的state中的数据和actions中的方法绑定到props上\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(UserDetails))"]}