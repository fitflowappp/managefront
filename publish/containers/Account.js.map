{"version":3,"sources":["../../src/containers/Account.js"],"names":["Account","props","state","role","editAccount","componentDidMount","query","componentDidUpdate","prevProps","prevState","queryAccount","add","setState","refs","getWrappedInstance","openModal","edit","account","del","that","confirm","title","body","surecb","deleteAccount","res","changeRole","render","accounts","list","bind","map","index","id","headerImg","contentUri","name","intro","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","file":"Account.js","sourcesContent":["/**\r\n * Created by qwr on 2016/6/6.\r\n */\r\nimport React, {Component, PropTypes} from 'react'\r\nimport Helmet from \"react-helmet\"\r\nimport {bindActionCreators} from 'redux'\r\nimport {connect} from 'react-redux'\r\nimport {withRouter} from \"react-router\";\r\nimport {Button, Panel, Nav, NavItem} from \"react-bootstrap\"\r\nimport {accountActions} from '../actions'\r\nimport AccountModal from '../components/modal/AccountModal';\r\nimport Alert from '../components/Alert';\r\nclass Account extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            role: 0,\r\n            editAccount:null,\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        const role=this.state.role;\r\n        this.query(role);\r\n    }\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if(this.state.role!=prevState.role){\r\n            this.query();\r\n        }\r\n    }\r\n    query() {\r\n        const {queryAccount} = this.props;\r\n        const role=this.state.role;\r\n        queryAccount({\"role\": role});\r\n    }\r\n    add() {\r\n        this.setState({\r\n        editAccount: null,\r\n    })\r\n        this.refs['AccountModal'].getWrappedInstance().openModal();\r\n    }\r\n    edit(account) {\r\n        this.setState({\r\n            editAccount: Object.assign({},account),\r\n        })\r\n        this.refs['AccountModal'].getWrappedInstance().openModal();\r\n    }\r\n    del(account) {\r\n        const that=this;\r\n        Alert.confirm({title:'删除',body:\"确定删除？\",surecb:function(){\r\n            const {deleteAccount} = that.props;\r\n            deleteAccount(account,function (res) {\r\n\r\n            });\r\n        }\r\n        });\r\n    }\r\n    changeRole(role) {\r\n        this.setState({\r\n            role: role,\r\n        });\r\n    }\r\n    render() {\r\n        const accounts = this.props.account.list||[];\r\n        const role=this.state.role;\r\n        return (\r\n            <div>\r\n                <Helmet title=\"Account\"/>\r\n                <AccountModal ref=\"AccountModal\" query={this.query.bind(this)} role={role} editAccount={this.state.editAccount}/>\r\n                    <Nav bsStyle=\"tabs\">\r\n                            <NavItem className={role==0?\"active\":''} onClick={this.changeRole.bind(this,0)}>管理员</NavItem>\r\n                            <NavItem className={role==1?\"active\":''} onClick={this.changeRole.bind(this,1)}>用户</NavItem>{/*\r\n                            <NavItem className={role==2?\"active\":''} onClick={this.changeRole.bind(this,2)}>买手</NavItem>\r\n                            <NavItem className={role==3?\"active\":''} onClick={this.changeRole.bind(this,3)}>仓库管理员</NavItem>\r\n                            <NavItem className={role==4?\"active\":''} onClick={this.changeRole.bind(this,4)}>搭配师</NavItem>\r\n                            <NavItem className={role==5?\"active\":''} onClick={this.changeRole.bind(this,5)}>采购人</NavItem>*/}\r\n                    </Nav>\r\n                    <Panel className=\"m-t5\">\r\n                        <div>\r\n                            <Button bsStyle=\"primary\" className=\"glyphicon glyphicon-plus\" onClick={this.add.bind(this)}/>\r\n                        </div>\r\n                        <table className=\"table table-condensed table-hover\">\r\n                            <thead>\r\n                            <tr>\r\n                                <th>头像</th>\r\n                                <th>用户名</th>\r\n                                <th>角色名</th>\r\n                                <th>简介</th>\r\n                                <th>操作</th>\r\n                            </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                            {accounts.map((account, index) =>\r\n                                <tr key={account.id}>\r\n                                    <td>\r\n                                        {account.headerImg&& <img src={account.headerImg.contentUri} alt=\"头像\" width=\"50\"/>}\r\n                                    </td>\r\n                                    <td>{account.name}</td>\r\n                                    <td>\r\n                                        {account.role == 0 && '管理员'}\r\n                                        {account.role == 1 && '用户'}\r\n                                        {account.role == 2 && '买手'}\r\n                                        {account.role == 3 && '仓库管理员'}\r\n                                        {account.role == 4 && '搭配师'}\r\n                                        {account.role == 5 && '采购人'}\r\n                                    </td>\r\n                                    <td>{account.intro}</td>\r\n                                    <td>\r\n                                        {account.role != 0&&<Button bsStyle=\"info\" className='glyphicon glyphicon-pencil m-5' onClick={this.edit.bind(this,account)}/>}\r\n                                        {/*<Button bsStyle=\"danger\" className=\"glyphicon glyphicon-trash m-5\" onClick={this.del.bind(this,account)}/>*/}\r\n                                    </td>\r\n                                </tr>\r\n                            )}\r\n                            </tbody>\r\n                        </table>\r\n                    </Panel>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        account: state.account\r\n    }\r\n}\r\n//将action的所有方法绑定到props上\r\nfunction mapDispatchToProps(dispatch) {\r\n    return bindActionCreators(accountActions, dispatch)\r\n}\r\n\r\n//通过react-redux提供的connect方法将我们需要的state中的数据和actions中的方法绑定到props上\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Account))"]}