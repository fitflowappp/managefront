{"version":3,"sources":["../../src/containers/Register.js"],"names":["Register","props","register","event","preventDefault","login","param","target","that","obj","result","code","save","router","replace","pathname","info","msg","bind","render","mapStateToProps","state","account","mapDispatchToProps","dispatch"],"mappings":";;;;;;;;;;;;;;;;;;AAGA;;;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AACA;;AACA;;;;AACA;;;;AACA;;AACA;;;;IACMA,Q;;;AACF,sBAAYC,KAAZ,EAAmB;AAAA;AAAA,8DACf,sBAAMA,KAAN,CADe;AAElB;AACD;;;uBACAC,Q,qBAASC,K,EAAM;AACXA,cAAMC,cAAN;AADW,YAEJC,KAFI,GAEK,KAAKJ,KAFV,CAEJI,KAFI;;AAGX,YAAMC,QAAM,0BAAcH,MAAMI,MAApB,CAAZ;AACA,YAAMC,OAAK,IAAX;AACAH,cAAMC,KAAN,EAAY,UAAUG,GAAV,EAAe;AACvB,gBAAIA,IAAIC,MAAJ,CAAWC,IAAX,IAAmB,CAAvB,EAA0B;AACtB,sCAAOC,IAAP,CAAY,OAAZ,EAAqBH,GAArB,EAA0B,EAAC,QAAQ,GAAT,EAA1B;AACAD,qBAAKP,KAAL,CAAWY,MAAX,CAAkBC,OAAlB,CAA0B,EAACC,UAAU,YAAX,EAA1B;AACH,aAHD,MAIK;AACD,gCAAMC,IAAN,CAAW,EAACA,MAAMP,IAAIC,MAAJ,CAAWO,GAAlB,EAAX;AACH;AACJ,SARW,CAQVC,IARU,CAQL,IARK,CAAZ;AASH,K;;uBAEDC,M,qBAAS;AACL,eACI;AAAA;AAAA,cAAK,WAAW,EAAC,aAAY,IAAb,EAAkB,QAAO,qBAAzB,EAAhB;AACI,mEAAQ,OAAM,OAAd,GADJ;AAEI;AAAA;AAAA;AACI;AAAA;AAAA,sBAAK,WAAU,WAAf;AACI;AAAA;AAAA,0BAAK,WAAU,YAAf;AACI;AAAA;AAAA;AAAA;AAAA;AADJ,qBADJ;AAII;AAAA;AAAA,0BAAK,WAAU,gBAAf;AACI;AAAA;AAAA,8BAAG,WAAU,eAAb;AAAA;AAAA,yBADJ;AAEI;AAAA;AAAA,8BAAM,MAAK,MAAX,EAAmB,UAAY,KAAKjB,QAAL,CAAcgB,IAAd,CAAmB,IAAnB,CAA/B;AACI;AAAA;AAAA,kCAAK,WAAU,yBAAf;AACI,yEAAO,MAAK,MAAZ,EAAmB,WAAU,cAA7B,EAA4C,UAAU,IAAtD,EAA8D,MAAK,MAAnE,EAA0E,aAAY,MAAtF,GADJ;AAEI,wEAAM,WAAU,iDAAhB;AAFJ,6BADJ;AAKI;AAAA;AAAA,kCAAK,WAAU,yBAAf;AACI,yEAAO,MAAK,UAAZ,EAAuB,WAAU,cAAjC,EAAgD,UAAU,IAA1D,EAAkE,MAAK,UAAvE,EAAkF,aAAY,UAA9F,GADJ;AAEI,wEAAM,WAAU,gDAAhB;AAFJ,6BALJ;AASI;AAAA;AAAA,kCAAK,WAAU,yBAAf;AACI,yEAAO,MAAK,UAAZ,EAAuB,WAAU,cAAjC,EAAgD,UAAU,IAA1D,EAAkE,MAAK,YAAvE,EAAoF,aAAY,iBAAhG,GADJ;AAEI,wEAAM,WAAU,kDAAhB;AAFJ,6BATJ;AAaI;AAAA;AAAA,kCAAK,WAAU,KAAf;AACI;AAAA;AAAA,sCAAK,WAAU,0BAAf;AACI;AAAA;AAAA,0CAAQ,MAAK,QAAb,EAAsB,WAAU,oCAAhC;AAAA;AAAA;AADJ;AADJ;AAbJ;AAFJ;AAJJ;AADJ;AAFJ,SADJ;AAkCH,K;;;qBAtEL;;;;;AAwEA,SAASE,eAAT,CAAyBC,KAAzB,EAAgC;AAC5B,WAAO;AACHC,iBAASD,MAAMC;AADZ,KAAP;AAGH;AACD,SAASC,kBAAT,CAA4BC,QAA5B,EAAsC;AAClC,WAAO,wDAAmCA,QAAnC,CAAP;AACH;kBACc,yBAAQJ,eAAR,EAAyBG,kBAAzB,EAA6C,6BAAWvB,QAAX,CAA7C,C","file":"Register.js","sourcesContent":["/**\r\n * Created by qwr on 2017/9/14.\r\n */\r\nimport React, {Component, PropTypes} from 'react'\r\nimport {bindActionCreators} from 'redux'\r\nimport {withRouter} from \"react-router\";\r\nimport {connect} from 'react-redux'\r\nimport {accountActions} from '../actions'\r\nimport Helmet from \"react-helmet\"\r\nimport {Panel, Button, Col, Row,Form,FormControl,FormGroup,Glyphicon} from \"react-bootstrap\"\r\nimport Alert from '../components/Alert'\r\nimport cookie from 'react-cookie'\r\nimport {getMuser} from '../common/auth'\r\nimport {serializeForm} from '../common/index'\r\nclass Register extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    //注册\r\n    register(event){\r\n        event.preventDefault();\r\n        const {login} = this.props;\r\n        const param=serializeForm(event.target);\r\n        const that=this;\r\n        login(param,function (obj) {\r\n            if (obj.result.code == 1) {\r\n                cookie.save(\"muser\", obj, {\"path\": '/'});\r\n                that.props.router.replace({pathname: '/dashboard'});\r\n            }\r\n            else {\r\n                Alert.info({info: obj.result.msg});\r\n            }\r\n        }.bind(this));\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Row className={{\"show-grid\":true,\"hide\":getMuser()}}>\r\n                <Helmet title=\"Login\"/>\r\n                <div>\r\n                    <div className=\"login-box\">\r\n                        <div className=\"login-logo\">\r\n                            <b>yoga manage</b>\r\n                        </div>\r\n                        <div className=\"login-box-body\">\r\n                            <p className=\"login-box-msg\">Register a new membership</p>\r\n                            <Form role=\"form\"  onSubmit = {this.register.bind(this)}>\r\n                                <div className=\"form-group has-feedback\">\r\n                                    <input type=\"text\" className=\"form-control\" required={true}   name=\"name\" placeholder=\"Name\"/>\r\n                                    <span className=\"glyphicon glyphicon-user  form-control-feedback\"></span>\r\n                                </div>\r\n                                <div className=\"form-group has-feedback\">\r\n                                    <input type=\"password\" className=\"form-control\" required={true}   name=\"password\" placeholder=\"Password\"/>\r\n                                    <span className=\"glyphicon glyphicon-lock form-control-feedback\"></span>\r\n                                </div>\r\n                                <div className=\"form-group has-feedback\">\r\n                                    <input type=\"password\" className=\"form-control\" required={true}   name=\"rePassword\" placeholder=\"Retype password\"/>\r\n                                    <span className=\"glyphicon glyphicon-log-in form-control-feedback\"></span>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-xs-4 col-md-offset-8\">\r\n                                        <button type=\"submit\" className=\"btn btn-primary btn-block btn-flat\">Register</button>\r\n                                    </div>\r\n                                </div>\r\n                            </Form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Row>\r\n        )\r\n    }\r\n}\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        account: state.account\r\n    }\r\n}\r\nfunction mapDispatchToProps(dispatch) {\r\n    return bindActionCreators(accountActions, dispatch)\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Register))\r\n"]}