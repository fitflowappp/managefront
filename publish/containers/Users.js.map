{"version":3,"sources":["../../src/containers/Users.js"],"names":["Users","props","state","condition","number","size","componentDidMount","location","query","setState","queryUsers","setCondition","eventKey","router","replace","pathname","render","users","list","content","map","user","index","id","facebookUid","email","firstOpenDate","unRegistered","submittedDate","registrationCompletedDate","userState","currentChallengeId","completedChallengeNum","duration","completedWorkoutNum","userConfiguration","notification","remider","shareCount","totalPages","parseInt","bind","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","file":"Users.js","sourcesContent":["/**\r\n * Created by qwr on 2017/10/11.\r\n */\r\nimport React, {Component, PropTypes} from 'react'\r\nimport Helmet from \"react-helmet\"\r\nimport {bindActionCreators} from 'redux'\r\nimport {connect} from 'react-redux'\r\nimport {Link, withRouter} from \"react-router\";\r\nimport {Col, Pagination} from \"react-bootstrap\"\r\nimport {upload} from '../common/fetch'\r\nimport {getTime} from '../common'\r\nimport {usersActions} from '../actions'\r\nimport Alert from '../components/Alert';\r\nclass Users extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            condition: {\r\n                number:0,\r\n                size:20,\r\n            },\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        var condition = this.props.location.query;\r\n        if (!condition.number) {\r\n            condition = this.state.condition;\r\n        } else {\r\n            this.setState({\r\n                condition: condition,\r\n            })\r\n        }\r\n        this.query(condition);\r\n    }\r\n\r\n    query(condition) {\r\n        const {queryUsers} = this.props;\r\n        queryUsers(condition);\r\n    }\r\n\r\n    setCondition(eventKey) {\r\n        var condition = this.state.condition;\r\n        condition.number = eventKey-1;\r\n        this.setState(condition);\r\n        this.query(condition);\r\n        this.props.router.replace({pathname: this.props.location.pathname, query: condition});\r\n    }\r\n\r\n    render() {\r\n        const users = this.props.users.list;\r\n        const condition=this.state.condition;\r\n        return (\r\n            <div>\r\n                <Helmet title=\"Users\"/>\r\n                {users&&<div className=\"box\">\r\n                    <div className=\"box-header\">\r\n                        <h3 className=\"box-title\">Users</h3>\r\n                        <div className=\"box-tools\">\r\n                            <button type=\"button\" className=\"btn btn-success pull-right m-5\">\r\n                                <i className=\"fa fa-download\"></i>Export csv\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"box-body table-responsive\">\r\n                        <table className=\"table table-bordered table-hover\">\r\n                            <tbody>\r\n                            <tr>\r\n                                <th>ID</th>\r\n                                <th>Facebook ID</th>\r\n                                <th>Email Address</th>\r\n                                <th>Timestamp of App First Opened</th>\r\n                                <th>Registered?</th>\r\n                                <th>Timestamp of Facebook Registration submitted</th>\r\n                                <th>Timestamp of Registration Completed</th>\r\n                                <th>Current challenge ID</th>\r\n                                <th>Number of completed challenges</th>\r\n                                <th>Cumulative duration of videos watched</th>\r\n                                <th>Number of completed Workouts</th>\r\n                                <th>Scheduling in-app notification on?</th>\r\n                                <th>Scheduling calendar reminder on?</th>\r\n                                <th>Cumulative number of social shares</th>\r\n                            </tr>\r\n                             {users.content.map((user, index) =>\r\n                             <tr key={index}>\r\n                             <td><Link to={\"/userdetails/\"+user.user.id}>{user.user.id}</Link></td>\r\n                             <td>{user.facebookUid}</td>\r\n                             <td>{user.email}</td>\r\n                             <td>{getTime(user.firstOpenDate)}</td>\r\n                             <td>{user.unRegistered?'no':'yes'}</td>\r\n                             <td>{getTime(user.submittedDate)}</td>\r\n                             <td>{getTime(user.registrationCompletedDate)}</td>\r\n                             <td>{user.userState&&user.userState.currentChallengeId}</td>\r\n                             <td>{user.userState&&user.userState.completedChallengeNum}</td>\r\n                             <td>{user.userState&&user.userState.duration}</td>\r\n                             <td>{user.userState&&user.userState.completedWorkoutNum}</td>\r\n                             <td>{user.userConfiguration&&user.userConfiguration.notification}</td>\r\n                             <td>{user.userConfiguration&&user.userConfiguration.remider}</td>\r\n                             <td>{user.shareCount}</td>\r\n                             </tr>\r\n                             )}\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n\r\n                    <div className=\"box-footer clearfix\">\r\n                        <div className=\"pull-right\">\r\n                            <Pagination\r\n                                prev\r\n                                next\r\n                                first\r\n                                last\r\n                                ellipsis\r\n                                boundaryLinks\r\n                                items={users.totalPages}\r\n                                maxButtons={2}\r\n                                activePage={parseInt(condition.number)+1}\r\n                                onSelect={this.setCondition.bind(this)}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>}\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        users: state.users\r\n    }\r\n}\r\n//将action的所有方法绑定到props上\r\nfunction mapDispatchToProps(dispatch) {\r\n    return bindActionCreators(usersActions, dispatch)\r\n}\r\n\r\n//通过react-redux提供的connect方法将我们需要的state中的数据和actions中的方法绑定到props上\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Users))"]}