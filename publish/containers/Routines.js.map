{"version":3,"sources":["../../src/containers/Routines.js"],"names":["Routines","props","state","condition","sortKey","sortType","componentDidMount","location","query","setState","componentDidUpdate","prevProps","prevState","queryRoutines","setCondition","router","replace","pathname","render","routines","list","bind","map","routine","index","id","code","title","duration","display","startedTimes","skippedTimes","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","file":"Routines.js","sourcesContent":["/**\r\n * Created by qwr on 2017/9/13.\r\n */\r\nimport React, {Component, PropTypes} from 'react'\r\nimport Helmet from \"react-helmet\"\r\nimport {bindActionCreators} from 'redux'\r\nimport {connect} from 'react-redux'\r\nimport {Link, withRouter} from \"react-router\";\r\nimport {Col, Pagination} from \"react-bootstrap\"\r\nimport {routinesActions} from '../actions'\r\nimport Alert from '../components/Alert';\r\nclass Routines extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            condition:{\r\n                sortKey:'id',\r\n                sortType:1, //1升-1降\r\n            },\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        var condition=this.props.location.query;\r\n        if(!condition.sortKey){\r\n            condition=this.state.condition;\r\n        }else{\r\n            this.setState({\r\n                condition:condition,\r\n            })\r\n        }\r\n        this.query(condition);\r\n    }\r\n    componentDidUpdate(prevProps, prevState) {\r\n\r\n    }\r\n    query(condition) {\r\n        const {queryRoutines} = this.props;\r\n        queryRoutines(condition);\r\n    }\r\n    setCondition(sortKey){\r\n        var condition=this.state.condition;\r\n        var sortType;\r\n\r\n        if(sortKey==condition.sortKey){\r\n            if(condition.sortType==1){\r\n                sortType=-1;\r\n            }else{\r\n                sortType=1;\r\n            }\r\n        }else{\r\n            sortType=1;\r\n        }\r\n\r\n        condition.sortKey=sortKey;\r\n        condition.sortType=sortType;\r\n\r\n        this.setState(condition);\r\n        this.query(condition);\r\n        this.props.router.replace({pathname: this.props.location.pathname, query: condition});\r\n    }\r\n    render() {\r\n        const routines = this.props.routines.list||[];\r\n        var condition=this.state.condition;\r\n        return (\r\n            <div>\r\n                <Helmet title=\"Routines\"/>\r\n                <div className=\"box\">\r\n                    <div className=\"box-header\">\r\n                        <h3 className=\"box-title\">Routines</h3>\r\n                        <div className=\"box-tools\">\r\n                            <Link to={'/routinesedit/0'}>\r\n                                <button type=\"button\"  className=\"btn  btn-primary m-5\">Create New Routine</button>\r\n                            </Link>\r\n                            <button type=\"button\" className=\"btn btn-success pull-right m-5\">\r\n                                <i className=\"fa fa-download\"></i>Export csv\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"box-body table-responsive\">\r\n                        <table  className=\"table table-bordered dataTable\">\r\n                            <thead>\r\n                            <tr role=\"row\">\r\n                                <th className={condition.sortKey=='id'?(condition.sortType==1?\"sorting_asc\":\"sorting_desc\"):'sorting'} onClick={this.setCondition.bind(this,'id')}>ID</th>\r\n                                <th className={condition.sortKey=='code'?(condition.sortType==1?\"sorting_asc\":\"sorting_desc\"):'sorting'} onClick={this.setCondition.bind(this,'code')}>Code</th>\r\n                                <th className={condition.sortKey=='title'?(condition.sortType==1?\"sorting_asc\":\"sorting_desc\"):'sorting'} onClick={this.setCondition.bind(this,'title')}>Title</th>\r\n                                <th className={condition.sortKey=='duration'?(condition.sortType==1?\"sorting_asc\":\"sorting_desc\"):'sorting'} onClick={this.setCondition.bind(this,'duration')}>Duration</th>\r\n                                <th className={condition.sortKey=='display'?(condition.sortType==1?\"sorting_asc\":\"sorting_desc\"):'sorting'} onClick={this.setCondition.bind(this,'display')}>Display in Workout detail page?</th>\r\n                                <th className={condition.sortKey=='startedTimes'?(condition.sortType==1?\"sorting_asc\":\"sorting_desc\"):'sorting'} onClick={this.setCondition.bind(this,'started')}>Number of times started</th>\r\n                                <th className={condition.sortKey=='skippedTimes'?(condition.sortType==1?\"sorting_asc\":\"sorting_desc\"):'sorting'} onClick={this.setCondition.bind(this,'skipped')}>Number of times skipped</th>\r\n                            </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                            {routines.map((routine, index) =>\r\n                            <tr key={index}>\r\n                                <td><Link to={'/routinesedit/'+routine.id}>{routine.id}</Link></td>\r\n                                <td>{routine.code}</td>\r\n                                <td>{routine.title}</td>\r\n                                <td>{routine.duration}</td>\r\n                                <td>{routine.display?'yes':'no'}</td>\r\n                                <td>{routine.startedTimes}</td>\r\n                                <td>{routine.skippedTimes}</td>\r\n                            </tr>\r\n                            )}\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n\r\n                    {/*<div className=\"box-footer clearfix\">\r\n                        <div className=\"pull-right\">\r\n                            <Pagination\r\n                                prev\r\n                                next\r\n                                first\r\n                                last\r\n                                ellipsis\r\n                                boundaryLinks\r\n                                items={3}\r\n                                maxButtons={5}\r\n                                activePage={this.state.activePage}\r\n                                onSelect={this.handleSelect.bind(this)}\r\n                            />\r\n                        </div>\r\n                    </div>*/}\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        routines: state.routines\r\n    }\r\n}\r\n//将action的所有方法绑定到props上\r\nfunction mapDispatchToProps(dispatch) {\r\n    return bindActionCreators(routinesActions, dispatch)\r\n}\r\n\r\n//通过react-redux提供的connect方法将我们需要的state中的数据和actions中的方法绑定到props上\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Routines))"]}