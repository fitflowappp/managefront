{"version":3,"sources":["../../src/containers/Dashboard.js"],"names":["Dashboard","props","state","condition","number","size","componentDidMount","location","query","setState","queryDashboard","handleSelect","eventKey","e","router","replace","pathname","render","dashboards","dashboard","list","map","index","date","facebookRegSubmitNum","facebookRegCompleteNum","challengeStartNum","challengeCompleteNum","workoutStartNum","workoutCompleteNum","oneWorkoutCompleteUserNum","totalDuration","calReminderOnNum","achievementNum","shareNum","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","file":"Dashboard.js","sourcesContent":["/**\r\n * Created by qwr on 2017/9/13.\r\n */\r\nimport React, {Component, PropTypes} from 'react'\r\nimport Helmet from \"react-helmet\"\r\nimport {bindActionCreators} from 'redux'\r\nimport {connect} from 'react-redux'\r\nimport {Link, withRouter} from \"react-router\";\r\nimport {Col, Pagination} from \"react-bootstrap\"\r\nimport {upload} from '../common/fetch'\r\nimport {getTime} from '../common'\r\nimport {dashboardActions} from '../actions'\r\nimport Alert from '../components/Alert';\r\nclass Dashboard extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            condition:{\r\n                number:1,\r\n                size:20,\r\n            },\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        var condition=this.props.location.query;\r\n        if(!condition.number){\r\n            condition=this.state.condition;\r\n        }else{\r\n            this.setState({\r\n                condition:condition,\r\n            })\r\n        }\r\n        this.query(condition);\r\n    }\r\n    query(condition) {\r\n        const {queryDashboard} = this.props;\r\n        //queryDashboard(condition);\r\n        queryDashboard();\r\n    }\r\n\r\n\r\n    //分页\r\n    handleSelect(eventKey,e){\r\n        var condition=this.state.condition;\r\n        condition.number=eventKey;\r\n        this.setState(condition);\r\n        this.query(condition);\r\n        this.props.router.replace({pathname: this.props.location.pathname, query: condition});\r\n    }\r\n    render() {\r\n        const dashboards = this.props.dashboard.list||[];\r\n        const condition=this.state.condition;\r\n        return (\r\n            <div>\r\n                <Helmet title=\"Dashboard\"/>\r\n                <div className=\"box\">\r\n                    <div className=\"box-header\">\r\n                        <h3 className=\"box-title\">Analytics Dashboard</h3>\r\n                        <div className=\"box-tools\">\r\n                            <Link to=\"/milestones\"><button type=\"button\"  className=\"btn  btn-primary m-5\">Edit Milestones</button></Link>\r\n                            <button type=\"button\" className=\"btn btn-success pull-right m-5\">\r\n                                <i className=\"fa fa-download\"></i>Export csv\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"box-body table-responsive\">\r\n                        <table className=\"table table-bordered table-hover\">\r\n                            <tbody>\r\n                            <tr>\r\n                                <th></th>\r\n                                <th>Facebook registration submitted</th>\r\n                                <th>Facebook registration completed</th>\r\n                                <th>Challenges started by unique users</th>\r\n                                <th>Challenges completed by unique users</th>\r\n                                <th>Workouts started by unique users</th>\r\n                                <th>Workouts completed by unique users</th>\r\n                                <th>Unique users who completed a Workout</th>\r\n                                <th>Cumulative duration of videos watched</th>\r\n                                <th>Unique users who turned scheduling on</th>\r\n                                <th>Unique users who have received achievements</th>\r\n                                <th>Unique users who have shared on social media</th>\r\n                            </tr>\r\n                            {dashboards.map((dashboard, index) =>\r\n                            <tr key={index}>\r\n                                <td>{getTime(dashboard.date)}</td>\r\n                                <td>{dashboard.facebookRegSubmitNum}</td>\r\n                                <td>{dashboard.facebookRegCompleteNum}</td>\r\n                                <td>{dashboard.challengeStartNum}</td>\r\n                                <td>{dashboard.challengeCompleteNum}</td>\r\n                                <td>{dashboard.workoutStartNum}</td>\r\n                                <td>{dashboard.workoutCompleteNum}</td>\r\n                                <td>{dashboard.oneWorkoutCompleteUserNum}</td>\r\n                                <td>{dashboard.totalDuration}</td>\r\n                                <td>{dashboard.calReminderOnNum}</td>\r\n                                <td>{dashboard.achievementNum}</td>\r\n                                <td>{dashboard.shareNum}</td>\r\n                            </tr>\r\n                            )}\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n\r\n                   {/* <div className=\"box-footer clearfix\">\r\n                        <div className=\"pull-right\">\r\n                            <Pagination\r\n                                prev\r\n                                next\r\n                                first\r\n                                last\r\n                                ellipsis\r\n                                boundaryLinks\r\n                                items={3}\r\n                                maxButtons={5}\r\n                                activePage={Number(condition.number)}\r\n                                onSelect={this.handleSelect.bind(this)}\r\n                            />\r\n                        </div>\r\n                    </div>*/}\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        dashboard: state.dashboard\r\n    }\r\n}\r\n//将action的所有方法绑定到props上\r\nfunction mapDispatchToProps(dispatch) {\r\n    return bindActionCreators(dashboardActions, dispatch)\r\n}\r\n\r\n//通过react-redux提供的connect方法将我们需要的state中的数据和actions中的方法绑定到props上\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Dashboard))"]}